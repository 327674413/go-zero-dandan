// Code generated by goctl. DO NOT EDIT.
package {{.packageName}}

import (
	"context"
    "go-zero-dandan/common/resd"
    "go-zero-dandan/common/typed"
	{{.imports}}

	"github.com/zeromicro/go-zero/core/logx"
)

type {{.logicName}}Gen struct {
	ctx    context.Context
	svc *svc.ServiceContext
	resd         *resd.Resp
    meta *typed.ReqMeta
	logx.Logger
	{{.dandDefineVars}}
}

func New{{.logicName}}Gen(ctx context.Context,svc *svc.ServiceContext) *{{.logicName}}Gen {
    meta, _ := ctx.Value("reqMeta").(*typed.ReqMeta)
    if meta == nil{
        meta = &typed.ReqMeta{}
    }
	return &{{.logicName}}Gen{
		ctx:    ctx,
		svc: svc,
		Logger: logx.WithContext(ctx),
		resd:   resd.NewResp(ctx, meta.Lang),
		meta:meta,
	}
}


func (l *{{.logicName}}Gen) initReq({{if .hasReq}}in {{.request}}{{end}}) error {
    {{.danInitVars}}
	return nil
}

