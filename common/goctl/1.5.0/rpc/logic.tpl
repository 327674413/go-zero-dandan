// Code generated by goctl. DO NOT EDIT.
package {{.packageName}}

import (
	"context"
    "go-zero-dandan/common/resd"
	{{.imports}}

	"github.com/zeromicro/go-zero/core/logx"
)

type {{.logicName}}Gen struct {
	ctx    context.Context
	svc *svc.ServiceContext
	resd         *resd.Resp
    lang         string
    userId  string
    platId string
	logx.Logger
	{{.dandDefineVars}}
}

func New{{.logicName}}Gen(ctx context.Context,svc *svc.ServiceContext) *{{.logicName}}Gen {
    lang, _ := ctx.Value("lang").(string)
	return &{{.logicName}}Gen{
		ctx:    ctx,
		svc: svc,
		Logger: logx.WithContext(ctx),
		lang:lang,
		resd:   resd.NewResd(ctx, resd.I18n.NewLang(lang)),
	}
}


func (l *{{.logicName}}) initReq({{if .hasReq}}req {{.request}}{{end}}) error {
    var err error
	if err = l.initPlat(); err != nil {
    	return l.resd.Error(err)
    }
    {{.danInitVars}}
	return nil
}

func (l *{{.logicName}}) initUser() (err error) {
	userId, _ := l.ctx.Value("userId").(string)
	l.userId = userId
	return nil
}

func (l *{{.logicName}}) initPlat() (err error) {
    platId,_ := l.ctx.Value("platId").(string)
    l.platId = platId
    return nil
}
