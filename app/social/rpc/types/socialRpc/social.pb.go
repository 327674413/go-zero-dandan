// Code generated by goctl. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.19.4
// source: social.proto

package socialRpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyReq) Reset() {
	*x = EmptyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyReq) ProtoMessage() {}

func (x *EmptyReq) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyReq.ProtoReflect.Descriptor instead.
func (*EmptyReq) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{0}
}

type MatchField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Str     string   `protobuf:"bytes,2,opt,name=str,proto3" json:"str,omitempty"`
	Strs    string   `protobuf:"bytes,3,opt,name=strs,proto3" json:"strs,omitempty"`
	Num     int64    `protobuf:"varint,4,opt,name=num,proto3" json:"num,omitempty"`
	Nums    []int64  `protobuf:"varint,5,rep,packed,name=nums,proto3" json:"nums,omitempty"`
	IsFuzzy bool     `protobuf:"varint,6,opt,name=isFuzzy,proto3" json:"isFuzzy,omitempty"`
	Raws    []string `protobuf:"bytes,7,rep,name=raws,proto3" json:"raws,omitempty"`
}

func (x *MatchField) Reset() {
	*x = MatchField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchField) ProtoMessage() {}

func (x *MatchField) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchField.ProtoReflect.Descriptor instead.
func (*MatchField) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{1}
}

func (x *MatchField) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MatchField) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

func (x *MatchField) GetStrs() string {
	if x != nil {
		return x.Strs
	}
	return ""
}

func (x *MatchField) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *MatchField) GetNums() []int64 {
	if x != nil {
		return x.Nums
	}
	return nil
}

func (x *MatchField) GetIsFuzzy() bool {
	if x != nil {
		return x.IsFuzzy
	}
	return false
}

func (x *MatchField) GetRaws() []string {
	if x != nil {
		return x.Raws
	}
	return nil
}

type GetUserRelationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatId     *string  `protobuf:"bytes,1,opt,name=platId,proto3,oneof" json:"platId,omitempty"`
	UserId     *string  `protobuf:"bytes,2,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	FriendUids []string `protobuf:"bytes,3,rep,name=friendUids,proto3" json:"friendUids,omitempty"`
}

func (x *GetUserRelationReq) Reset() {
	*x = GetUserRelationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRelationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRelationReq) ProtoMessage() {}

func (x *GetUserRelationReq) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRelationReq.ProtoReflect.Descriptor instead.
func (*GetUserRelationReq) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserRelationReq) GetPlatId() string {
	if x != nil && x.PlatId != nil {
		return *x.PlatId
	}
	return ""
}

func (x *GetUserRelationReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *GetUserRelationReq) GetFriendUids() []string {
	if x != nil {
		return x.FriendUids
	}
	return nil
}

type GetUserRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relats map[string]int64 `protobuf:"bytes,1,rep,name=relats,proto3" json:"relats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetUserRelationResp) Reset() {
	*x = GetUserRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRelationResp) ProtoMessage() {}

func (x *GetUserRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRelationResp.ProtoReflect.Descriptor instead.
func (*GetUserRelationResp) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserRelationResp) GetRelats() map[string]int64 {
	if x != nil {
		return x.Relats
	}
	return nil
}

type FriendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	FriendRemark string `protobuf:"bytes,3,opt,name=friendRemark,proto3" json:"friendRemark,omitempty"`
	SourceEm     int64  `protobuf:"varint,4,opt,name=sourceEm,proto3" json:"sourceEm,omitempty"`
	FriendUid    string `protobuf:"bytes,5,opt,name=friendUid,proto3" json:"friendUid,omitempty"`
	PlatId       string `protobuf:"bytes,6,opt,name=platId,proto3" json:"platId,omitempty"`
	FriendName   string `protobuf:"bytes,7,opt,name=friendName,proto3" json:"friendName,omitempty"`
	FriendAlias  string `protobuf:"bytes,8,opt,name=friendAlias,proto3" json:"friendAlias,omitempty"`
	FriendIcon   string `protobuf:"bytes,9,opt,name=friendIcon,proto3" json:"friendIcon,omitempty"`
	FriendSexEm  int64  `protobuf:"varint,10,opt,name=friendSexEm,proto3" json:"friendSexEm,omitempty"`
}

func (x *FriendInfo) Reset() {
	*x = FriendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfo) ProtoMessage() {}

func (x *FriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfo.ProtoReflect.Descriptor instead.
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{4}
}

func (x *FriendInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FriendInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FriendInfo) GetFriendRemark() string {
	if x != nil {
		return x.FriendRemark
	}
	return ""
}

func (x *FriendInfo) GetSourceEm() int64 {
	if x != nil {
		return x.SourceEm
	}
	return 0
}

func (x *FriendInfo) GetFriendUid() string {
	if x != nil {
		return x.FriendUid
	}
	return ""
}

func (x *FriendInfo) GetPlatId() string {
	if x != nil {
		return x.PlatId
	}
	return ""
}

func (x *FriendInfo) GetFriendName() string {
	if x != nil {
		return x.FriendName
	}
	return ""
}

func (x *FriendInfo) GetFriendAlias() string {
	if x != nil {
		return x.FriendAlias
	}
	return ""
}

func (x *FriendInfo) GetFriendIcon() string {
	if x != nil {
		return x.FriendIcon
	}
	return ""
}

func (x *FriendInfo) GetFriendSexEm() int64 {
	if x != nil {
		return x.FriendSexEm
	}
	return 0
}

type FriendApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId          string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	FriendUid       string `protobuf:"bytes,3,opt,name=friendUid,proto3" json:"friendUid,omitempty"`
	ApplyLastMsg    string `protobuf:"bytes,4,opt,name=applyLastMsg,proto3" json:"applyLastMsg,omitempty"`
	ApplyLastAt     int64  `protobuf:"varint,5,opt,name=applyLastAt,proto3" json:"applyLastAt,omitempty"`
	OperateMsg      string `protobuf:"bytes,6,opt,name=operateMsg,proto3" json:"operateMsg,omitempty"`
	OperateAt       int64  `protobuf:"varint,7,opt,name=operateAt,proto3" json:"operateAt,omitempty"`
	StateEm         int64  `protobuf:"varint,8,opt,name=stateEm,proto3" json:"stateEm,omitempty"`
	PlatId          string `protobuf:"bytes,9,opt,name=platId,proto3" json:"platId,omitempty"`
	FriendName      string `protobuf:"bytes,10,opt,name=friendName,proto3" json:"friendName,omitempty"`
	FriendAvatarImg string `protobuf:"bytes,11,opt,name=friendAvatarImg,proto3" json:"friendAvatarImg,omitempty"`
	FriendSex       int64  `protobuf:"varint,12,opt,name=friendSex,proto3" json:"friendSex,omitempty"`
	UserName        string `protobuf:"bytes,13,opt,name=userName,proto3" json:"userName,omitempty"`
	UserAvatarImg   string `protobuf:"bytes,14,opt,name=userAvatarImg,proto3" json:"userAvatarImg,omitempty"`
	UserSex         int64  `protobuf:"varint,15,opt,name=userSex,proto3" json:"userSex,omitempty"`
}

func (x *FriendApply) Reset() {
	*x = FriendApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendApply) ProtoMessage() {}

func (x *FriendApply) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendApply.ProtoReflect.Descriptor instead.
func (*FriendApply) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{5}
}

func (x *FriendApply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FriendApply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FriendApply) GetFriendUid() string {
	if x != nil {
		return x.FriendUid
	}
	return ""
}

func (x *FriendApply) GetApplyLastMsg() string {
	if x != nil {
		return x.ApplyLastMsg
	}
	return ""
}

func (x *FriendApply) GetApplyLastAt() int64 {
	if x != nil {
		return x.ApplyLastAt
	}
	return 0
}

func (x *FriendApply) GetOperateMsg() string {
	if x != nil {
		return x.OperateMsg
	}
	return ""
}

func (x *FriendApply) GetOperateAt() int64 {
	if x != nil {
		return x.OperateAt
	}
	return 0
}

func (x *FriendApply) GetStateEm() int64 {
	if x != nil {
		return x.StateEm
	}
	return 0
}

func (x *FriendApply) GetPlatId() string {
	if x != nil {
		return x.PlatId
	}
	return ""
}

func (x *FriendApply) GetFriendName() string {
	if x != nil {
		return x.FriendName
	}
	return ""
}

func (x *FriendApply) GetFriendAvatarImg() string {
	if x != nil {
		return x.FriendAvatarImg
	}
	return ""
}

func (x *FriendApply) GetFriendSex() int64 {
	if x != nil {
		return x.FriendSex
	}
	return 0
}

func (x *FriendApply) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *FriendApply) GetUserAvatarImg() string {
	if x != nil {
		return x.UserAvatarImg
	}
	return ""
}

func (x *FriendApply) GetUserSex() int64 {
	if x != nil {
		return x.UserSex
	}
	return 0
}

type GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StateEm     int64  `protobuf:"varint,3,opt,name=stateEm,proto3" json:"stateEm,omitempty"`
	TypeEm      int64  `protobuf:"varint,4,opt,name=typeEm,proto3" json:"typeEm,omitempty"`
	CreateUid   string `protobuf:"bytes,5,opt,name=createUid,proto3" json:"createUid,omitempty"`
	IsVerify    int64  `protobuf:"varint,6,opt,name=isVerify,proto3" json:"isVerify,omitempty"`
	NotiContent string `protobuf:"bytes,7,opt,name=notiContent,proto3" json:"notiContent,omitempty"`
	NotiUid     string `protobuf:"bytes,8,opt,name=notiUid,proto3" json:"notiUid,omitempty"`
	PlatId      string `protobuf:"bytes,9,opt,name=platId,proto3" json:"platId,omitempty"`
	Code        string `protobuf:"bytes,10,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{6}
}

func (x *GroupInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GroupInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupInfo) GetStateEm() int64 {
	if x != nil {
		return x.StateEm
	}
	return 0
}

func (x *GroupInfo) GetTypeEm() int64 {
	if x != nil {
		return x.TypeEm
	}
	return 0
}

func (x *GroupInfo) GetCreateUid() string {
	if x != nil {
		return x.CreateUid
	}
	return ""
}

func (x *GroupInfo) GetIsVerify() int64 {
	if x != nil {
		return x.IsVerify
	}
	return 0
}

func (x *GroupInfo) GetNotiContent() string {
	if x != nil {
		return x.NotiContent
	}
	return ""
}

func (x *GroupInfo) GetNotiUid() string {
	if x != nil {
		return x.NotiUid
	}
	return ""
}

func (x *GroupInfo) GetPlatId() string {
	if x != nil {
		return x.PlatId
	}
	return ""
}

func (x *GroupInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GroupMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GroupId      string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	UserId       string `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	RoleLevel    int64  `protobuf:"varint,4,opt,name=roleLevel,proto3" json:"roleLevel,omitempty"`
	JoinAt       int64  `protobuf:"varint,5,opt,name=joinAt,proto3" json:"joinAt,omitempty"`
	JoinSourceEm int64  `protobuf:"varint,6,opt,name=joinSourceEm,proto3" json:"joinSourceEm,omitempty"`
	InviteUid    string `protobuf:"bytes,7,opt,name=inviteUid,proto3" json:"inviteUid,omitempty"`
	OperateUid   string `protobuf:"bytes,8,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	PlatId       string `protobuf:"bytes,9,opt,name=platId,proto3" json:"platId,omitempty"`
}

func (x *GroupMember) Reset() {
	*x = GroupMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMember) ProtoMessage() {}

func (x *GroupMember) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMember.ProtoReflect.Descriptor instead.
func (*GroupMember) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{7}
}

func (x *GroupMember) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GroupMember) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupMember) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GroupMember) GetRoleLevel() int64 {
	if x != nil {
		return x.RoleLevel
	}
	return 0
}

func (x *GroupMember) GetJoinAt() int64 {
	if x != nil {
		return x.JoinAt
	}
	return 0
}

func (x *GroupMember) GetJoinSourceEm() int64 {
	if x != nil {
		return x.JoinSourceEm
	}
	return 0
}

func (x *GroupMember) GetInviteUid() string {
	if x != nil {
		return x.InviteUid
	}
	return ""
}

func (x *GroupMember) GetOperateUid() string {
	if x != nil {
		return x.OperateUid
	}
	return ""
}

func (x *GroupMember) GetPlatId() string {
	if x != nil {
		return x.PlatId
	}
	return ""
}

type GroupMemberApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GroupId        string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	UserId         string `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	ApplyMsg       string `protobuf:"bytes,4,opt,name=applyMsg,proto3" json:"applyMsg,omitempty"`
	ApplyAt        int64  `protobuf:"varint,5,opt,name=applyAt,proto3" json:"applyAt,omitempty"`
	JoinSourceEm   int64  `protobuf:"varint,6,opt,name=joinSourceEm,proto3" json:"joinSourceEm,omitempty"`
	InviteUid      string `protobuf:"bytes,7,opt,name=inviteUid,proto3" json:"inviteUid,omitempty"`
	OperateUid     string `protobuf:"bytes,8,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	OperateStateEm int64  `protobuf:"varint,9,opt,name=operateStateEm,proto3" json:"operateStateEm,omitempty"`
	OperateAt      int64  `protobuf:"varint,10,opt,name=operateAt,proto3" json:"operateAt,omitempty"`
	PlatId         string `protobuf:"bytes,11,opt,name=platId,proto3" json:"platId,omitempty"`
	OperateMsg     string `protobuf:"bytes,12,opt,name=operateMsg,proto3" json:"operateMsg,omitempty"`
}

func (x *GroupMemberApply) Reset() {
	*x = GroupMemberApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMemberApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMemberApply) ProtoMessage() {}

func (x *GroupMemberApply) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMemberApply.ProtoReflect.Descriptor instead.
func (*GroupMemberApply) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{8}
}

func (x *GroupMemberApply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GroupMemberApply) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupMemberApply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GroupMemberApply) GetApplyMsg() string {
	if x != nil {
		return x.ApplyMsg
	}
	return ""
}

func (x *GroupMemberApply) GetApplyAt() int64 {
	if x != nil {
		return x.ApplyAt
	}
	return 0
}

func (x *GroupMemberApply) GetJoinSourceEm() int64 {
	if x != nil {
		return x.JoinSourceEm
	}
	return 0
}

func (x *GroupMemberApply) GetInviteUid() string {
	if x != nil {
		return x.InviteUid
	}
	return ""
}

func (x *GroupMemberApply) GetOperateUid() string {
	if x != nil {
		return x.OperateUid
	}
	return ""
}

func (x *GroupMemberApply) GetOperateStateEm() int64 {
	if x != nil {
		return x.OperateStateEm
	}
	return 0
}

func (x *GroupMemberApply) GetOperateAt() int64 {
	if x != nil {
		return x.OperateAt
	}
	return 0
}

func (x *GroupMemberApply) GetPlatId() string {
	if x != nil {
		return x.PlatId
	}
	return ""
}

func (x *GroupMemberApply) GetOperateMsg() string {
	if x != nil {
		return x.OperateMsg
	}
	return ""
}

type ResultResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResultResp) Reset() {
	*x = ResultResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultResp) ProtoMessage() {}

func (x *ResultResp) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultResp.ProtoReflect.Descriptor instead.
func (*ResultResp) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{9}
}

func (x *ResultResp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *ResultResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type CreateFriendApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatId    *string `protobuf:"bytes,1,opt,name=platId,proto3,oneof" json:"platId,omitempty"`
	UserId    *string `protobuf:"bytes,2,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	FriendUid *string `protobuf:"bytes,3,opt,name=friendUid,proto3,oneof" json:"friendUid,omitempty"`
	ApplyMsg  *string `protobuf:"bytes,4,opt,name=applyMsg,proto3,oneof" json:"applyMsg,omitempty"`
	ApplyAt   *int64  `protobuf:"varint,5,opt,name=applyAt,proto3,oneof" json:"applyAt,omitempty"`
	SourceEm  *int64  `protobuf:"varint,6,opt,name=sourceEm,proto3,oneof" json:"sourceEm,omitempty"`
}

func (x *CreateFriendApplyReq) Reset() {
	*x = CreateFriendApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFriendApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFriendApplyReq) ProtoMessage() {}

func (x *CreateFriendApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFriendApplyReq.ProtoReflect.Descriptor instead.
func (*CreateFriendApplyReq) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{10}
}

func (x *CreateFriendApplyReq) GetPlatId() string {
	if x != nil && x.PlatId != nil {
		return *x.PlatId
	}
	return ""
}

func (x *CreateFriendApplyReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *CreateFriendApplyReq) GetFriendUid() string {
	if x != nil && x.FriendUid != nil {
		return *x.FriendUid
	}
	return ""
}

func (x *CreateFriendApplyReq) GetApplyMsg() string {
	if x != nil && x.ApplyMsg != nil {
		return *x.ApplyMsg
	}
	return ""
}

func (x *CreateFriendApplyReq) GetApplyAt() int64 {
	if x != nil && x.ApplyAt != nil {
		return *x.ApplyAt
	}
	return 0
}

func (x *CreateFriendApplyReq) GetSourceEm() int64 {
	if x != nil && x.SourceEm != nil {
		return *x.SourceEm
	}
	return 0
}

type CreateFriendApplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplyId string `protobuf:"bytes,1,opt,name=applyId,proto3" json:"applyId,omitempty"`
}

func (x *CreateFriendApplyResp) Reset() {
	*x = CreateFriendApplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFriendApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFriendApplyResp) ProtoMessage() {}

func (x *CreateFriendApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFriendApplyResp.ProtoReflect.Descriptor instead.
func (*CreateFriendApplyResp) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{11}
}

func (x *CreateFriendApplyResp) GetApplyId() string {
	if x != nil {
		return x.ApplyId
	}
	return ""
}

type OperateFriendApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplyId        *string `protobuf:"bytes,1,opt,name=applyId,proto3,oneof" json:"applyId,omitempty"`
	OperateUid     *string `protobuf:"bytes,2,opt,name=operateUid,proto3,oneof" json:"operateUid,omitempty"`
	OperateStateEm *int64  `protobuf:"varint,3,opt,name=operateStateEm,proto3,oneof" json:"operateStateEm,omitempty"`
	PlatId         *string `protobuf:"bytes,4,opt,name=platId,proto3,oneof" json:"platId,omitempty"`
	OperateMsg     *string `protobuf:"bytes,5,opt,name=operateMsg,proto3,oneof" json:"operateMsg,omitempty"`
	SysRoleEm      *string `protobuf:"bytes,6,opt,name=sysRoleEm,proto3,oneof" json:"sysRoleEm,omitempty"`
	SysRoleUid     *string `protobuf:"bytes,7,opt,name=sysRoleUid,proto3,oneof" json:"sysRoleUid,omitempty"`
}

func (x *OperateFriendApplyReq) Reset() {
	*x = OperateFriendApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateFriendApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateFriendApplyReq) ProtoMessage() {}

func (x *OperateFriendApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateFriendApplyReq.ProtoReflect.Descriptor instead.
func (*OperateFriendApplyReq) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{12}
}

func (x *OperateFriendApplyReq) GetApplyId() string {
	if x != nil && x.ApplyId != nil {
		return *x.ApplyId
	}
	return ""
}

func (x *OperateFriendApplyReq) GetOperateUid() string {
	if x != nil && x.OperateUid != nil {
		return *x.OperateUid
	}
	return ""
}

func (x *OperateFriendApplyReq) GetOperateStateEm() int64 {
	if x != nil && x.OperateStateEm != nil {
		return *x.OperateStateEm
	}
	return 0
}

func (x *OperateFriendApplyReq) GetPlatId() string {
	if x != nil && x.PlatId != nil {
		return *x.PlatId
	}
	return ""
}

func (x *OperateFriendApplyReq) GetOperateMsg() string {
	if x != nil && x.OperateMsg != nil {
		return *x.OperateMsg
	}
	return ""
}

func (x *OperateFriendApplyReq) GetSysRoleEm() string {
	if x != nil && x.SysRoleEm != nil {
		return *x.SysRoleEm
	}
	return ""
}

func (x *OperateFriendApplyReq) GetSysRoleUid() string {
	if x != nil && x.SysRoleUid != nil {
		return *x.SysRoleUid
	}
	return ""
}

type GetUserRecvFriendApplyPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      *string                `protobuf:"bytes,1,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	PlatId      *string                `protobuf:"bytes,2,opt,name=platId,proto3,oneof" json:"platId,omitempty"`
	Page        *int64                 `protobuf:"varint,3,opt,name=page,proto3,oneof" json:"page,omitempty"`
	Size        *int64                 `protobuf:"varint,4,opt,name=size,proto3,oneof" json:"size,omitempty"`
	IsNeedTotal *int64                 `protobuf:"varint,5,opt,name=isNeedTotal,proto3,oneof" json:"isNeedTotal,omitempty"`
	Match       map[string]*MatchField `protobuf:"bytes,6,rep,name=match,proto3" json:"match,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetUserRecvFriendApplyPageReq) Reset() {
	*x = GetUserRecvFriendApplyPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRecvFriendApplyPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRecvFriendApplyPageReq) ProtoMessage() {}

func (x *GetUserRecvFriendApplyPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRecvFriendApplyPageReq.ProtoReflect.Descriptor instead.
func (*GetUserRecvFriendApplyPageReq) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{13}
}

func (x *GetUserRecvFriendApplyPageReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *GetUserRecvFriendApplyPageReq) GetPlatId() string {
	if x != nil && x.PlatId != nil {
		return *x.PlatId
	}
	return ""
}

func (x *GetUserRecvFriendApplyPageReq) GetPage() int64 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *GetUserRecvFriendApplyPageReq) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *GetUserRecvFriendApplyPageReq) GetIsNeedTotal() int64 {
	if x != nil && x.IsNeedTotal != nil {
		return *x.IsNeedTotal
	}
	return 0
}

func (x *GetUserRecvFriendApplyPageReq) GetMatch() map[string]*MatchField {
	if x != nil {
		return x.Match
	}
	return nil
}

type FriendApplyPageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*FriendApply `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FriendApplyPageResp) Reset() {
	*x = FriendApplyPageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendApplyPageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendApplyPageResp) ProtoMessage() {}

func (x *FriendApplyPageResp) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendApplyPageResp.ProtoReflect.Descriptor instead.
func (*FriendApplyPageResp) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{14}
}

func (x *FriendApplyPageResp) GetList() []*FriendApply {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FriendApplyPageResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetUserFriendListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *string `protobuf:"bytes,1,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	PlatId *string `protobuf:"bytes,2,opt,name=platId,proto3,oneof" json:"platId,omitempty"`
}

func (x *GetUserFriendListReq) Reset() {
	*x = GetUserFriendListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserFriendListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFriendListReq) ProtoMessage() {}

func (x *GetUserFriendListReq) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFriendListReq.ProtoReflect.Descriptor instead.
func (*GetUserFriendListReq) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{15}
}

func (x *GetUserFriendListReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *GetUserFriendListReq) GetPlatId() string {
	if x != nil && x.PlatId != nil {
		return *x.PlatId
	}
	return ""
}

type FriendListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*FriendInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *FriendListResp) Reset() {
	*x = FriendListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendListResp) ProtoMessage() {}

func (x *FriendListResp) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendListResp.ProtoReflect.Descriptor instead.
func (*FriendListResp) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{16}
}

func (x *FriendListResp) GetList() []*FriendInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type GetFriendOnlineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *string `protobuf:"bytes,1,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	PlatId *string `protobuf:"bytes,2,opt,name=platId,proto3,oneof" json:"platId,omitempty"`
}

func (x *GetFriendOnlineReq) Reset() {
	*x = GetFriendOnlineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendOnlineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendOnlineReq) ProtoMessage() {}

func (x *GetFriendOnlineReq) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendOnlineReq.ProtoReflect.Descriptor instead.
func (*GetFriendOnlineReq) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{17}
}

func (x *GetFriendOnlineReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *GetFriendOnlineReq) GetPlatId() string {
	if x != nil && x.PlatId != nil {
		return *x.PlatId
	}
	return ""
}

type FriendOnlineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineUser map[string]bool `protobuf:"bytes,1,rep,name=onlineUser,proto3" json:"onlineUser,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *FriendOnlineResp) Reset() {
	*x = FriendOnlineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendOnlineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendOnlineResp) ProtoMessage() {}

func (x *FriendOnlineResp) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendOnlineResp.ProtoReflect.Descriptor instead.
func (*FriendOnlineResp) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{18}
}

func (x *FriendOnlineResp) GetOnlineUser() map[string]bool {
	if x != nil {
		return x.OnlineUser
	}
	return nil
}

type GetGroupUserOnlineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId *string `protobuf:"bytes,1,opt,name=groupId,proto3,oneof" json:"groupId,omitempty"`
	PlatId  *string `protobuf:"bytes,2,opt,name=platId,proto3,oneof" json:"platId,omitempty"`
}

func (x *GetGroupUserOnlineReq) Reset() {
	*x = GetGroupUserOnlineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupUserOnlineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupUserOnlineReq) ProtoMessage() {}

func (x *GetGroupUserOnlineReq) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupUserOnlineReq.ProtoReflect.Descriptor instead.
func (*GetGroupUserOnlineReq) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{19}
}

func (x *GetGroupUserOnlineReq) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

func (x *GetGroupUserOnlineReq) GetPlatId() string {
	if x != nil && x.PlatId != nil {
		return *x.PlatId
	}
	return ""
}

type GroupUserOnlineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineUser map[string]bool `protobuf:"bytes,1,rep,name=onlineUser,proto3" json:"onlineUser,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GroupUserOnlineResp) Reset() {
	*x = GroupUserOnlineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupUserOnlineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupUserOnlineResp) ProtoMessage() {}

func (x *GroupUserOnlineResp) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupUserOnlineResp.ProtoReflect.Descriptor instead.
func (*GroupUserOnlineResp) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{20}
}

func (x *GroupUserOnlineResp) GetOnlineUser() map[string]bool {
	if x != nil {
		return x.OnlineUser
	}
	return nil
}

type CreateGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Status    *int64  `protobuf:"varint,2,opt,name=status,proto3,oneof" json:"status,omitempty"`
	CreateUid *string `protobuf:"bytes,3,opt,name=createUid,proto3,oneof" json:"createUid,omitempty"`
	PlatId    *string `protobuf:"bytes,4,opt,name=platId,proto3,oneof" json:"platId,omitempty"`
}

func (x *CreateGroupReq) Reset() {
	*x = CreateGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupReq) ProtoMessage() {}

func (x *CreateGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupReq.ProtoReflect.Descriptor instead.
func (*CreateGroupReq) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{21}
}

func (x *CreateGroupReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateGroupReq) GetStatus() int64 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *CreateGroupReq) GetCreateUid() string {
	if x != nil && x.CreateUid != nil {
		return *x.CreateUid
	}
	return ""
}

func (x *CreateGroupReq) GetPlatId() string {
	if x != nil && x.PlatId != nil {
		return *x.PlatId
	}
	return ""
}

type CreateGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateGroupResp) Reset() {
	*x = CreateGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupResp) ProtoMessage() {}

func (x *CreateGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupResp.ProtoReflect.Descriptor instead.
func (*CreateGroupResp) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{22}
}

func (x *CreateGroupResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateGroupMemberApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatId       *string `protobuf:"bytes,1,opt,name=platId,proto3,oneof" json:"platId,omitempty"`
	GroupId      *string `protobuf:"bytes,2,opt,name=groupId,proto3,oneof" json:"groupId,omitempty"`
	ApplyMsg     *string `protobuf:"bytes,3,opt,name=applyMsg,proto3,oneof" json:"applyMsg,omitempty"`
	JoinSourceEm *int64  `protobuf:"varint,4,opt,name=joinSourceEm,proto3,oneof" json:"joinSourceEm,omitempty"`
	InviteUid    *string `protobuf:"bytes,5,opt,name=inviteUid,proto3,oneof" json:"inviteUid,omitempty"`
}

func (x *CreateGroupMemberApplyReq) Reset() {
	*x = CreateGroupMemberApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupMemberApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupMemberApplyReq) ProtoMessage() {}

func (x *CreateGroupMemberApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupMemberApplyReq.ProtoReflect.Descriptor instead.
func (*CreateGroupMemberApplyReq) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{23}
}

func (x *CreateGroupMemberApplyReq) GetPlatId() string {
	if x != nil && x.PlatId != nil {
		return *x.PlatId
	}
	return ""
}

func (x *CreateGroupMemberApplyReq) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

func (x *CreateGroupMemberApplyReq) GetApplyMsg() string {
	if x != nil && x.ApplyMsg != nil {
		return *x.ApplyMsg
	}
	return ""
}

func (x *CreateGroupMemberApplyReq) GetJoinSourceEm() int64 {
	if x != nil && x.JoinSourceEm != nil {
		return *x.JoinSourceEm
	}
	return 0
}

func (x *CreateGroupMemberApplyReq) GetInviteUid() string {
	if x != nil && x.InviteUid != nil {
		return *x.InviteUid
	}
	return ""
}

type CreateGroupMemberApplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplyId string `protobuf:"bytes,1,opt,name=applyId,proto3" json:"applyId,omitempty"`
}

func (x *CreateGroupMemberApplyResp) Reset() {
	*x = CreateGroupMemberApplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupMemberApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupMemberApplyResp) ProtoMessage() {}

func (x *CreateGroupMemberApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupMemberApplyResp.ProtoReflect.Descriptor instead.
func (*CreateGroupMemberApplyResp) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{24}
}

func (x *CreateGroupMemberApplyResp) GetApplyId() string {
	if x != nil {
		return x.ApplyId
	}
	return ""
}

type GetUserGroupMemberApplyListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *string `protobuf:"bytes,1,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	PlatId *string `protobuf:"bytes,2,opt,name=platId,proto3,oneof" json:"platId,omitempty"`
}

func (x *GetUserGroupMemberApplyListReq) Reset() {
	*x = GetUserGroupMemberApplyListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserGroupMemberApplyListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserGroupMemberApplyListReq) ProtoMessage() {}

func (x *GetUserGroupMemberApplyListReq) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserGroupMemberApplyListReq.ProtoReflect.Descriptor instead.
func (*GetUserGroupMemberApplyListReq) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{25}
}

func (x *GetUserGroupMemberApplyListReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *GetUserGroupMemberApplyListReq) GetPlatId() string {
	if x != nil && x.PlatId != nil {
		return *x.PlatId
	}
	return ""
}

type GroupMemberApplyListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GroupMemberApply `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GroupMemberApplyListResp) Reset() {
	*x = GroupMemberApplyListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMemberApplyListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMemberApplyListResp) ProtoMessage() {}

func (x *GroupMemberApplyListResp) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMemberApplyListResp.ProtoReflect.Descriptor instead.
func (*GroupMemberApplyListResp) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{26}
}

func (x *GroupMemberApplyListResp) GetList() []*GroupMemberApply {
	if x != nil {
		return x.List
	}
	return nil
}

type OperateGroupMemberApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplyId        *string `protobuf:"bytes,1,opt,name=applyId,proto3,oneof" json:"applyId,omitempty"`
	GroupId        *string `protobuf:"bytes,2,opt,name=groupId,proto3,oneof" json:"groupId,omitempty"`
	OperateUid     *string `protobuf:"bytes,3,opt,name=operateUid,proto3,oneof" json:"operateUid,omitempty"`
	OperateStateEm *int64  `protobuf:"varint,4,opt,name=operateStateEm,proto3,oneof" json:"operateStateEm,omitempty"`
	PlatId         *string `protobuf:"bytes,5,opt,name=platId,proto3,oneof" json:"platId,omitempty"`
	OperateMsg     *string `protobuf:"bytes,6,opt,name=operateMsg,proto3,oneof" json:"operateMsg,omitempty"`
}

func (x *OperateGroupMemberApplyReq) Reset() {
	*x = OperateGroupMemberApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateGroupMemberApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateGroupMemberApplyReq) ProtoMessage() {}

func (x *OperateGroupMemberApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateGroupMemberApplyReq.ProtoReflect.Descriptor instead.
func (*OperateGroupMemberApplyReq) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{27}
}

func (x *OperateGroupMemberApplyReq) GetApplyId() string {
	if x != nil && x.ApplyId != nil {
		return *x.ApplyId
	}
	return ""
}

func (x *OperateGroupMemberApplyReq) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

func (x *OperateGroupMemberApplyReq) GetOperateUid() string {
	if x != nil && x.OperateUid != nil {
		return *x.OperateUid
	}
	return ""
}

func (x *OperateGroupMemberApplyReq) GetOperateStateEm() int64 {
	if x != nil && x.OperateStateEm != nil {
		return *x.OperateStateEm
	}
	return 0
}

func (x *OperateGroupMemberApplyReq) GetPlatId() string {
	if x != nil && x.PlatId != nil {
		return *x.PlatId
	}
	return ""
}

func (x *OperateGroupMemberApplyReq) GetOperateMsg() string {
	if x != nil && x.OperateMsg != nil {
		return *x.OperateMsg
	}
	return ""
}

type GetUserGroupListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *string `protobuf:"bytes,1,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	PlatId *string `protobuf:"bytes,2,opt,name=platId,proto3,oneof" json:"platId,omitempty"`
}

func (x *GetUserGroupListReq) Reset() {
	*x = GetUserGroupListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserGroupListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserGroupListReq) ProtoMessage() {}

func (x *GetUserGroupListReq) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserGroupListReq.ProtoReflect.Descriptor instead.
func (*GetUserGroupListReq) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{28}
}

func (x *GetUserGroupListReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *GetUserGroupListReq) GetPlatId() string {
	if x != nil && x.PlatId != nil {
		return *x.PlatId
	}
	return ""
}

type GroupListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GroupInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GroupListResp) Reset() {
	*x = GroupListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupListResp) ProtoMessage() {}

func (x *GroupListResp) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupListResp.ProtoReflect.Descriptor instead.
func (*GroupListResp) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{29}
}

func (x *GroupListResp) GetList() []*GroupInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type GetGroupMemberListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId *string `protobuf:"bytes,1,opt,name=groupId,proto3,oneof" json:"groupId,omitempty"`
	PlatId  *string `protobuf:"bytes,2,opt,name=platId,proto3,oneof" json:"platId,omitempty"`
}

func (x *GetGroupMemberListReq) Reset() {
	*x = GetGroupMemberListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberListReq) ProtoMessage() {}

func (x *GetGroupMemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberListReq.ProtoReflect.Descriptor instead.
func (*GetGroupMemberListReq) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{30}
}

func (x *GetGroupMemberListReq) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

func (x *GetGroupMemberListReq) GetPlatId() string {
	if x != nil && x.PlatId != nil {
		return *x.PlatId
	}
	return ""
}

type GroupMemberListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GroupMember `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GroupMemberListResp) Reset() {
	*x = GroupMemberListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_social_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMemberListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMemberListResp) ProtoMessage() {}

func (x *GroupMemberListResp) ProtoReflect() protoreflect.Message {
	mi := &file_social_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMemberListResp.ProtoReflect.Descriptor instead.
func (*GroupMemberListResp) Descriptor() ([]byte, []int) {
	return file_social_proto_rawDescGZIP(), []int{31}
}

func (x *GroupMemberListResp) GetList() []*GroupMember {
	if x != nil {
		return x.List
	}
	return nil
}

var File_social_proto protoreflect.FileDescriptor

var file_social_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x22, 0x0a, 0x0a, 0x08, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x22, 0x9a, 0x01, 0x0a, 0x0a, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x73, 0x74, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x6e, 0x75, 0x6d,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x46, 0x75, 0x7a, 0x7a, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x46, 0x75, 0x7a, 0x7a, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x61, 0x77, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x77, 0x73, 0x22,
	0x84, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x73,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f,
	0x0a, 0x06, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x73, 0x1a,
	0x39, 0x0a, 0x0b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xae, 0x02, 0x0a, 0x0a, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45,
	0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x53, 0x65, 0x78, 0x45, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x78, 0x45, 0x6d, 0x22, 0xcd, 0x03, 0x0a, 0x0b,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x73,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x61,
	0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x61,
	0x73, 0x74, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c,
	0x79, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6d,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6d, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6d,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x78, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x78, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x75,
	0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6d, 0x67, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6d,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x78, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x78, 0x22, 0x83, 0x02, 0x0a, 0x09,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x45,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x45, 0x6d, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x6f, 0x74,
	0x69, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6e, 0x6f, 0x74, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x6f, 0x74, 0x69, 0x55, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f,
	0x74, 0x69, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0xff, 0x01, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x6f, 0x69, 0x6e, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x6a, 0x6f, 0x69, 0x6e, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6a, 0x6f, 0x69,
	0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x6a, 0x6f, 0x69, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6d, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x6c, 0x61, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61,
	0x74, 0x49, 0x64, 0x22, 0xea, 0x02, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70,
	0x70, 0x6c, 0x79, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70,
	0x70, 0x6c, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x41,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x6a, 0x6f, 0x69, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6d,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6a, 0x6f, 0x69, 0x6e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x45, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55,
	0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x45, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74,
	0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67,
	0x22, 0x36, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x9e, 0x02, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x71, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x08, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x08, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x04, 0x52, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x05, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6d, 0x88, 0x01, 0x01, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x55, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x73, 0x67,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x74, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6d, 0x22, 0x31, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x22, 0xf7, 0x02, 0x0a,
	0x15, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x79,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x02, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x45, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d,
	0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x79, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x45, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x09,
	0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a,
	0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x06, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x69, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x79,
	0x73, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x6d, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x79, 0x73, 0x52,
	0x6f, 0x6c, 0x65, 0x55, 0x69, 0x64, 0x22, 0x80, 0x03, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x63, 0x76, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x02, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x0b, 0x69, 0x73, 0x4e,
	0x65, 0x65, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x05, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x76, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x1a, 0x4c, 0x0a, 0x0a, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x69, 0x73,
	0x4e, 0x65, 0x65, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x54, 0x0a, 0x13, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x66, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x0e, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x64, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x10, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0a,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x3d, 0x0a, 0x0f, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1d,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x49,
	0x64, 0x22, 0xa1, 0x01, 0x0a, 0x13, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0a, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x3d, 0x0a, 0x0f, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb3, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x87,
	0x02, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x06,
	0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x6c,
	0x79, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x61, 0x70,
	0x70, 0x6c, 0x79, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x6a, 0x6f, 0x69,
	0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x03, 0x52, 0x0c, 0x6a, 0x6f, 0x69, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6d, 0x88,
	0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55,
	0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x73, 0x67, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6a, 0x6f,
	0x69, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6d, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x64,
	0x22, 0x70, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x49, 0x64, 0x22, 0x48, 0x0a, 0x18, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xc2, 0x02, 0x0a,
	0x1a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x07, 0x61,
	0x70, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x61, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2b,
	0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x70,
	0x6c, 0x61, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x70,
	0x6c, 0x61, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x55, 0x69, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x73,
	0x67, 0x22, 0x65, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x0d, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x6a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x13,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32, 0xae, 0x08, 0x0a,
	0x06, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x50, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x2e, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x12, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12,
	0x1d, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x12,
	0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x60, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63,
	0x76, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x25, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x76, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x16, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x21,
	0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x67, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51,
	0x0a, 0x17, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x2e, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x46, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1d, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x1d, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1b, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0d, 0x5a,
	0x0b, 0x2e, 0x2f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_social_proto_rawDescOnce sync.Once
	file_social_proto_rawDescData = file_social_proto_rawDesc
)

func file_social_proto_rawDescGZIP() []byte {
	file_social_proto_rawDescOnce.Do(func() {
		file_social_proto_rawDescData = protoimpl.X.CompressGZIP(file_social_proto_rawDescData)
	})
	return file_social_proto_rawDescData
}

var file_social_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_social_proto_goTypes = []interface{}{
	(*EmptyReq)(nil),                       // 0: social.EmptyReq
	(*MatchField)(nil),                     // 1: social.MatchField
	(*GetUserRelationReq)(nil),             // 2: social.GetUserRelationReq
	(*GetUserRelationResp)(nil),            // 3: social.GetUserRelationResp
	(*FriendInfo)(nil),                     // 4: social.FriendInfo
	(*FriendApply)(nil),                    // 5: social.FriendApply
	(*GroupInfo)(nil),                      // 6: social.GroupInfo
	(*GroupMember)(nil),                    // 7: social.GroupMember
	(*GroupMemberApply)(nil),               // 8: social.GroupMemberApply
	(*ResultResp)(nil),                     // 9: social.ResultResp
	(*CreateFriendApplyReq)(nil),           // 10: social.CreateFriendApplyReq
	(*CreateFriendApplyResp)(nil),          // 11: social.CreateFriendApplyResp
	(*OperateFriendApplyReq)(nil),          // 12: social.OperateFriendApplyReq
	(*GetUserRecvFriendApplyPageReq)(nil),  // 13: social.GetUserRecvFriendApplyPageReq
	(*FriendApplyPageResp)(nil),            // 14: social.FriendApplyPageResp
	(*GetUserFriendListReq)(nil),           // 15: social.GetUserFriendListReq
	(*FriendListResp)(nil),                 // 16: social.FriendListResp
	(*GetFriendOnlineReq)(nil),             // 17: social.GetFriendOnlineReq
	(*FriendOnlineResp)(nil),               // 18: social.FriendOnlineResp
	(*GetGroupUserOnlineReq)(nil),          // 19: social.GetGroupUserOnlineReq
	(*GroupUserOnlineResp)(nil),            // 20: social.GroupUserOnlineResp
	(*CreateGroupReq)(nil),                 // 21: social.CreateGroupReq
	(*CreateGroupResp)(nil),                // 22: social.CreateGroupResp
	(*CreateGroupMemberApplyReq)(nil),      // 23: social.CreateGroupMemberApplyReq
	(*CreateGroupMemberApplyResp)(nil),     // 24: social.CreateGroupMemberApplyResp
	(*GetUserGroupMemberApplyListReq)(nil), // 25: social.GetUserGroupMemberApplyListReq
	(*GroupMemberApplyListResp)(nil),       // 26: social.GroupMemberApplyListResp
	(*OperateGroupMemberApplyReq)(nil),     // 27: social.OperateGroupMemberApplyReq
	(*GetUserGroupListReq)(nil),            // 28: social.GetUserGroupListReq
	(*GroupListResp)(nil),                  // 29: social.GroupListResp
	(*GetGroupMemberListReq)(nil),          // 30: social.GetGroupMemberListReq
	(*GroupMemberListResp)(nil),            // 31: social.GroupMemberListResp
	nil,                                    // 32: social.GetUserRelationResp.RelatsEntry
	nil,                                    // 33: social.GetUserRecvFriendApplyPageReq.MatchEntry
	nil,                                    // 34: social.FriendOnlineResp.OnlineUserEntry
	nil,                                    // 35: social.GroupUserOnlineResp.OnlineUserEntry
}
var file_social_proto_depIdxs = []int32{
	32, // 0: social.GetUserRelationResp.relats:type_name -> social.GetUserRelationResp.RelatsEntry
	33, // 1: social.GetUserRecvFriendApplyPageReq.match:type_name -> social.GetUserRecvFriendApplyPageReq.MatchEntry
	5,  // 2: social.FriendApplyPageResp.list:type_name -> social.FriendApply
	4,  // 3: social.FriendListResp.list:type_name -> social.FriendInfo
	34, // 4: social.FriendOnlineResp.onlineUser:type_name -> social.FriendOnlineResp.OnlineUserEntry
	35, // 5: social.GroupUserOnlineResp.onlineUser:type_name -> social.GroupUserOnlineResp.OnlineUserEntry
	8,  // 6: social.GroupMemberApplyListResp.list:type_name -> social.GroupMemberApply
	6,  // 7: social.GroupListResp.list:type_name -> social.GroupInfo
	7,  // 8: social.GroupMemberListResp.list:type_name -> social.GroupMember
	1,  // 9: social.GetUserRecvFriendApplyPageReq.MatchEntry.value:type_name -> social.MatchField
	10, // 10: social.social.CreateFriendApply:input_type -> social.CreateFriendApplyReq
	12, // 11: social.social.OperateFriendApply:input_type -> social.OperateFriendApplyReq
	13, // 12: social.social.GetUserRecvFriendApplyPage:input_type -> social.GetUserRecvFriendApplyPageReq
	15, // 13: social.social.GetUserFriendList:input_type -> social.GetUserFriendListReq
	17, // 14: social.social.GetFriendOnline:input_type -> social.GetFriendOnlineReq
	2,  // 15: social.social.GetUserRelation:input_type -> social.GetUserRelationReq
	21, // 16: social.social.CreateGroup:input_type -> social.CreateGroupReq
	23, // 17: social.social.CreateGroupMemberApply:input_type -> social.CreateGroupMemberApplyReq
	25, // 18: social.social.GetUserGroupMemberApplyList:input_type -> social.GetUserGroupMemberApplyListReq
	27, // 19: social.social.OperateGroupMemberApply:input_type -> social.OperateGroupMemberApplyReq
	28, // 20: social.social.GetUserGroupList:input_type -> social.GetUserGroupListReq
	30, // 21: social.social.GetGroupMemberList:input_type -> social.GetGroupMemberListReq
	19, // 22: social.social.GetGroupUserOnline:input_type -> social.GetGroupUserOnlineReq
	11, // 23: social.social.CreateFriendApply:output_type -> social.CreateFriendApplyResp
	9,  // 24: social.social.OperateFriendApply:output_type -> social.ResultResp
	14, // 25: social.social.GetUserRecvFriendApplyPage:output_type -> social.FriendApplyPageResp
	16, // 26: social.social.GetUserFriendList:output_type -> social.FriendListResp
	18, // 27: social.social.GetFriendOnline:output_type -> social.FriendOnlineResp
	3,  // 28: social.social.GetUserRelation:output_type -> social.GetUserRelationResp
	22, // 29: social.social.CreateGroup:output_type -> social.CreateGroupResp
	24, // 30: social.social.CreateGroupMemberApply:output_type -> social.CreateGroupMemberApplyResp
	26, // 31: social.social.GetUserGroupMemberApplyList:output_type -> social.GroupMemberApplyListResp
	9,  // 32: social.social.OperateGroupMemberApply:output_type -> social.ResultResp
	29, // 33: social.social.GetUserGroupList:output_type -> social.GroupListResp
	31, // 34: social.social.GetGroupMemberList:output_type -> social.GroupMemberListResp
	20, // 35: social.social.GetGroupUserOnline:output_type -> social.GroupUserOnlineResp
	23, // [23:36] is the sub-list for method output_type
	10, // [10:23] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_social_proto_init() }
func file_social_proto_init() {
	if File_social_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_social_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRelationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMemberApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFriendApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFriendApplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateFriendApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRecvFriendApplyPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendApplyPageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserFriendListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendOnlineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendOnlineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupUserOnlineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupUserOnlineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupMemberApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupMemberApplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserGroupMemberApplyListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMemberApplyListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateGroupMemberApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserGroupListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_social_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMemberListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_social_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_social_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_social_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_social_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_social_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_social_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_social_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_social_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_social_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_social_proto_msgTypes[25].OneofWrappers = []interface{}{}
	file_social_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_social_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_social_proto_msgTypes[30].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_social_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_social_proto_goTypes,
		DependencyIndexes: file_social_proto_depIdxs,
		MessageInfos:      file_social_proto_msgTypes,
	}.Build()
	File_social_proto = out.File
	file_social_proto_rawDesc = nil
	file_social_proto_goTypes = nil
	file_social_proto_depIdxs = nil
}
