// Code generated by goctl. DO NOT EDIT.
// Source: social.proto

package social

import (
	"context"

	"go-zero-dandan/app/social/rpc/types/socialRpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateFriendApplyReq           = socialRpc.CreateFriendApplyReq
	CreateFriendApplyResp          = socialRpc.CreateFriendApplyResp
	CreateGroupMemberApplyReq      = socialRpc.CreateGroupMemberApplyReq
	CreateGroupMemberApplyResp     = socialRpc.CreateGroupMemberApplyResp
	CreateGroupReq                 = socialRpc.CreateGroupReq
	CreateGroupResp                = socialRpc.CreateGroupResp
	FriendApply                    = socialRpc.FriendApply
	FriendApplyPageResp            = socialRpc.FriendApplyPageResp
	FriendInfo                     = socialRpc.FriendInfo
	FriendListResp                 = socialRpc.FriendListResp
	FriendOnlineResp               = socialRpc.FriendOnlineResp
	GetFriendOnlineReq             = socialRpc.GetFriendOnlineReq
	GetGroupMemberListReq          = socialRpc.GetGroupMemberListReq
	GetGroupUserOnlineReq          = socialRpc.GetGroupUserOnlineReq
	GetUserFriendListReq           = socialRpc.GetUserFriendListReq
	GetUserGroupListReq            = socialRpc.GetUserGroupListReq
	GetUserGroupMemberApplyListReq = socialRpc.GetUserGroupMemberApplyListReq
	GetUserRecvFriendApplyPageReq  = socialRpc.GetUserRecvFriendApplyPageReq
	GetUserRelationReq             = socialRpc.GetUserRelationReq
	GetUserRelationResp            = socialRpc.GetUserRelationResp
	GroupInfo                      = socialRpc.GroupInfo
	GroupListResp                  = socialRpc.GroupListResp
	GroupMember                    = socialRpc.GroupMember
	GroupMemberApply               = socialRpc.GroupMemberApply
	GroupMemberApplyListResp       = socialRpc.GroupMemberApplyListResp
	GroupMemberListResp            = socialRpc.GroupMemberListResp
	GroupUserOnlineResp            = socialRpc.GroupUserOnlineResp
	MatchField                     = socialRpc.MatchField
	OperateFriendApplyReq          = socialRpc.OperateFriendApplyReq
	OperateGroupMemberApplyReq     = socialRpc.OperateGroupMemberApplyReq
	ResultResp                     = socialRpc.ResultResp

	Social interface {
		CreateFriendApply(ctx context.Context, in *CreateFriendApplyReq, opts ...grpc.CallOption) (*CreateFriendApplyResp, error)
		OperateFriendApply(ctx context.Context, in *OperateFriendApplyReq, opts ...grpc.CallOption) (*ResultResp, error)
		GetUserRecvFriendApplyPage(ctx context.Context, in *GetUserRecvFriendApplyPageReq, opts ...grpc.CallOption) (*FriendApplyPageResp, error)
		GetUserFriendList(ctx context.Context, in *GetUserFriendListReq, opts ...grpc.CallOption) (*FriendListResp, error)
		GetFriendOnline(ctx context.Context, in *GetFriendOnlineReq, opts ...grpc.CallOption) (*FriendOnlineResp, error)
		GetUserRelation(ctx context.Context, in *GetUserRelationReq, opts ...grpc.CallOption) (*GetUserRelationResp, error)
		CreateGroup(ctx context.Context, in *CreateGroupReq, opts ...grpc.CallOption) (*CreateGroupResp, error)
		CreateGroupMemberApply(ctx context.Context, in *CreateGroupMemberApplyReq, opts ...grpc.CallOption) (*CreateGroupMemberApplyResp, error)
		GetUserGroupMemberApplyList(ctx context.Context, in *GetUserGroupMemberApplyListReq, opts ...grpc.CallOption) (*GroupMemberApplyListResp, error)
		OperateGroupMemberApply(ctx context.Context, in *OperateGroupMemberApplyReq, opts ...grpc.CallOption) (*ResultResp, error)
		GetUserGroupList(ctx context.Context, in *GetUserGroupListReq, opts ...grpc.CallOption) (*GroupListResp, error)
		GetGroupMemberList(ctx context.Context, in *GetGroupMemberListReq, opts ...grpc.CallOption) (*GroupMemberListResp, error)
		GetGroupUserOnline(ctx context.Context, in *GetGroupUserOnlineReq, opts ...grpc.CallOption) (*GroupUserOnlineResp, error)
	}

	defaultSocial struct {
		cli zrpc.Client
	}
)

func NewSocial(cli zrpc.Client) Social {
	return &defaultSocial{
		cli: cli,
	}
}

func (m *defaultSocial) CreateFriendApply(ctx context.Context, in *CreateFriendApplyReq, opts ...grpc.CallOption) (*CreateFriendApplyResp, error) {
	client := socialRpc.NewSocialClient(m.cli.Conn())
	return client.CreateFriendApply(ctx, in, opts...)
}

func (m *defaultSocial) OperateFriendApply(ctx context.Context, in *OperateFriendApplyReq, opts ...grpc.CallOption) (*ResultResp, error) {
	client := socialRpc.NewSocialClient(m.cli.Conn())
	return client.OperateFriendApply(ctx, in, opts...)
}

func (m *defaultSocial) GetUserRecvFriendApplyPage(ctx context.Context, in *GetUserRecvFriendApplyPageReq, opts ...grpc.CallOption) (*FriendApplyPageResp, error) {
	client := socialRpc.NewSocialClient(m.cli.Conn())
	return client.GetUserRecvFriendApplyPage(ctx, in, opts...)
}

func (m *defaultSocial) GetUserFriendList(ctx context.Context, in *GetUserFriendListReq, opts ...grpc.CallOption) (*FriendListResp, error) {
	client := socialRpc.NewSocialClient(m.cli.Conn())
	return client.GetUserFriendList(ctx, in, opts...)
}

func (m *defaultSocial) GetFriendOnline(ctx context.Context, in *GetFriendOnlineReq, opts ...grpc.CallOption) (*FriendOnlineResp, error) {
	client := socialRpc.NewSocialClient(m.cli.Conn())
	return client.GetFriendOnline(ctx, in, opts...)
}

func (m *defaultSocial) GetUserRelation(ctx context.Context, in *GetUserRelationReq, opts ...grpc.CallOption) (*GetUserRelationResp, error) {
	client := socialRpc.NewSocialClient(m.cli.Conn())
	return client.GetUserRelation(ctx, in, opts...)
}

func (m *defaultSocial) CreateGroup(ctx context.Context, in *CreateGroupReq, opts ...grpc.CallOption) (*CreateGroupResp, error) {
	client := socialRpc.NewSocialClient(m.cli.Conn())
	return client.CreateGroup(ctx, in, opts...)
}

func (m *defaultSocial) CreateGroupMemberApply(ctx context.Context, in *CreateGroupMemberApplyReq, opts ...grpc.CallOption) (*CreateGroupMemberApplyResp, error) {
	client := socialRpc.NewSocialClient(m.cli.Conn())
	return client.CreateGroupMemberApply(ctx, in, opts...)
}

func (m *defaultSocial) GetUserGroupMemberApplyList(ctx context.Context, in *GetUserGroupMemberApplyListReq, opts ...grpc.CallOption) (*GroupMemberApplyListResp, error) {
	client := socialRpc.NewSocialClient(m.cli.Conn())
	return client.GetUserGroupMemberApplyList(ctx, in, opts...)
}

func (m *defaultSocial) OperateGroupMemberApply(ctx context.Context, in *OperateGroupMemberApplyReq, opts ...grpc.CallOption) (*ResultResp, error) {
	client := socialRpc.NewSocialClient(m.cli.Conn())
	return client.OperateGroupMemberApply(ctx, in, opts...)
}

func (m *defaultSocial) GetUserGroupList(ctx context.Context, in *GetUserGroupListReq, opts ...grpc.CallOption) (*GroupListResp, error) {
	client := socialRpc.NewSocialClient(m.cli.Conn())
	return client.GetUserGroupList(ctx, in, opts...)
}

func (m *defaultSocial) GetGroupMemberList(ctx context.Context, in *GetGroupMemberListReq, opts ...grpc.CallOption) (*GroupMemberListResp, error) {
	client := socialRpc.NewSocialClient(m.cli.Conn())
	return client.GetGroupMemberList(ctx, in, opts...)
}

func (m *defaultSocial) GetGroupUserOnline(ctx context.Context, in *GetGroupUserOnlineReq, opts ...grpc.CallOption) (*GroupUserOnlineResp, error) {
	client := socialRpc.NewSocialClient(m.cli.Conn())
	return client.GetGroupUserOnline(ctx, in, opts...)
}
