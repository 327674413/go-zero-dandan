// Code generated by goctl. DO NOT EDIT.
package logic

import (
	"context"
	"go-zero-dandan/app/social/rpc/internal/svc"
	"go-zero-dandan/app/social/rpc/types/socialRpc"
	"go-zero-dandan/common/resd"

	"github.com/zeromicro/go-zero/core/logx"
)

type GetUserFriendListLogicGen struct {
	ctx    context.Context
	svc    *svc.ServiceContext
	resd   *resd.Resp
	lang   string
	userId string
	platId string
	logx.Logger
	ReqUserId string
	ReqPlatId string
	HasReq    struct {
		UserId bool
		PlatId bool
	}
}

func NewGetUserFriendListLogicGen(ctx context.Context, svc *svc.ServiceContext) *GetUserFriendListLogicGen {
	lang, _ := ctx.Value("lang").(string)
	return &GetUserFriendListLogicGen{
		ctx:    ctx,
		svc:    svc,
		Logger: logx.WithContext(ctx),
		lang:   lang,
		resd:   resd.NewResd(ctx, resd.I18n.NewLang(lang)),
	}
}

func (l *GetUserFriendListLogicGen) initReq(req *socialRpc.GetUserFriendListReq) error {
	var err error
	if err = l.initPlat(); err != nil {
		return l.resd.Error(err)
	}

	if req.UserId != nil {
		l.ReqUserId = *req.UserId
		l.HasReq.UserId = true
	} else {
		l.HasReq.UserId = false
	}

	if req.PlatId != nil {
		l.ReqPlatId = *req.PlatId
		l.HasReq.PlatId = true
	} else {
		l.HasReq.PlatId = false
	}

	return nil
}

func (l *GetUserFriendListLogicGen) initUser() (err error) {
	userId, _ := l.ctx.Value("userId").(string)
	l.userId = userId
	return nil
}

func (l *GetUserFriendListLogicGen) initPlat() (err error) {
	platId, _ := l.ctx.Value("platId").(string)
	l.platId = platId
	return nil
}
