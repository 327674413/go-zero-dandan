// Code generated by goctl. DO NOT EDIT.
package logic

import (
	"context"
	"go-zero-dandan/app/social/rpc/internal/svc"
	"go-zero-dandan/app/social/rpc/types/socialRpc"
	"go-zero-dandan/common/resd"
	"go-zero-dandan/common/typed"

	"github.com/zeromicro/go-zero/core/logx"
)

type GetGroupMemberListLogicGen struct {
	ctx  context.Context
	svc  *svc.ServiceContext
	resd *resd.Resp
	meta *typed.ReqMeta
	logx.Logger
	req struct {
		GroupId string
		PlatId  string
	}
	hasReq struct {
		GroupId bool
		PlatId  bool
	}
}

func NewGetGroupMemberListLogicGen(ctx context.Context, svc *svc.ServiceContext) *GetGroupMemberListLogicGen {
	meta, _ := ctx.Value("reqMeta").(*typed.ReqMeta)
	if meta == nil {
		meta = &typed.ReqMeta{}
	}
	return &GetGroupMemberListLogicGen{
		ctx:    ctx,
		svc:    svc,
		Logger: logx.WithContext(ctx),
		resd:   resd.NewResp(ctx, resd.I18n.NewLang(meta.Lang)),
		meta:   meta,
	}
}

func (l *GetGroupMemberListLogicGen) initReq(req *socialRpc.GetGroupMemberListReq) error {

	if req.GroupId != nil {
		l.req.GroupId = *req.GroupId
		l.hasReq.GroupId = true
	} else {
		l.hasReq.GroupId = false
	}

	if req.PlatId != nil {
		l.req.PlatId = *req.PlatId
		l.hasReq.PlatId = true
	} else {
		l.hasReq.PlatId = false
	}

	return nil
}
