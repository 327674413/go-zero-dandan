type LoginByPhoneAndOtpReq {
	Phone     *string `json:"phone,optional"`
	PortEnum  *int64  `json:"port_enum"`
	OtpCode   *string `json:"otp_code"`
	PhoneArea *string `json:"phone_area,optional"`
}
type getPhoneVerifyCodeReq {
	Phone     *string `json:"phone"`
	PhoneArea *string `json:"phone_area,optional"`
}
type SuccessResp {
	Msg string `json:"msg"`
}
type LoginByPhoneReq {
	Phone   *string `json:"phone"`
	OtpCode *string `json:"otp_code"`
}
type UserInfoResp {
	Id          int64       `json:"id,string"`
	UserUnionId int64       `json:"userUnionId"`
	Account     string      `json:"account"`
	Uid         string      `json:"uid"`
	Nickname    string      `json:"nickname"`
	Phone       string      `json:"phone"`
	PhoneArea   string      `json:"phoneArea"`
	Email       string      `json:"email"`
	Avatar      string      `json:"avatar"`
	SexEm       int64       `json:"sexEm"`
	CreateAt    int64       `json:"createAt"`
	PlatInfo    interface{} `json:"platInfo"`
	UpdateAt    int64       `json:"updateAt"`
	UserToken   string      `json:"userToken"`
}
@server(
	jwt: Auth
	middleware: LangMiddleware
)
service user-api {
	@handler LoginByPhone
	post /user/LoginByPhone(LoginByPhoneReq) returns (UserInfoResp)
	@handler getPhoneVerifyCode
	post /user/getPhoneVerifyCode(getPhoneVerifyCodeReq) returns (SuccessResp)
}