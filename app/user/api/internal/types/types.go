// Code generated by goctl. DO NOT EDIT.
package types

type GetPhoneVerifyCodeReq struct {
	Phone     *string `json:"phone"`
	PhoneArea *string `json:"phoneArea,optional"`
}

type SuccessResp struct {
	Msg string `json:"msg"`
}

type LoginByPhoneReq struct {
	Phone     *string `json:"phone"`
	PhoneArea *string `json:"phoneArea,optional"`
	OtpCode   *string `json:"otpCode"`
	PortEm    *int64  `json:"portEm"`
}

type RegByPhoneReq struct {
	Phone     *string `json:"phone"`
	PhoneArea *string `json:"phoneArea,optional"`
	OtpCode   *string `json:"otpCode"`
	PortEm    *int64  `json:"portEm"`
}

type LoginByWxappCodeReq struct {
	Code string `json:"code"`
}

type LoginByWxappCodeResp struct {
	UserInfo      *UserInfoResp      `json:"userInfo"`
	WxappUserInfo *WxappUserInfoResp `json:"wxappUserInfo"`
}

type WxappUserInfoResp struct {
	Id     int64  `json:"id,string"`
	Openid string `json:"openid"`
}

type GetWxappOpenidReq struct {
	Code string `json:"code"`
}

type GetWxappOpenidResp struct {
	Openid string `json:"openid"`
}

type EditMyInfoReq struct {
	Nickname     *string `json:"nickname,optional"`
	SexEm        *int64  `json:"sexEm,optional"`
	Avatar       *string `json:"avatar,optional"`
	GraduateFrom *string `json:"graduateFrom,optional"`
	BirthDate    *string `json:"birthDate,optional"`
}

type UserInfoReq struct {
	Id        int64       `json:"id,string"`
	UnionId   int64       `json:"unionId,string"`
	Account   string      `json:"account"`
	Uid       string      `json:"uid"`
	Nickname  string      `json:"nickname"`
	Phone     string      `json:"phone"`
	PhoneArea string      `json:"phoneArea"`
	Email     string      `json:"email"`
	Avatar    string      `json:"avatar"`
	SexEm     int64       `json:"sexEm"`
	CreateAt  int64       `json:"createAt"`
	PlatInfo  interface{} `json:"platInfo"`
	UpdateAt  int64       `json:"updateAt"`
	UserToken string      `json:"userToken"`
}

type UserInfoResp struct {
	Id        int64       `json:"id,string"`
	UnionId   int64       `json:"unionId,string"`
	Account   string      `json:"account"`
	Uid       string      `json:"uid"`
	Nickname  string      `json:"nickname"`
	Phone     string      `json:"phone"`
	PhoneArea string      `json:"phoneArea"`
	Email     string      `json:"email"`
	Avatar    string      `json:"avatar"`
	SexEm     int64       `json:"sexEm"`
	CreateAt  int64       `json:"createAt"`
	PlatInfo  interface{} `json:"platInfo"`
	UpdateAt  int64       `json:"updateAt"`
	UserToken string      `json:"userToken"`
}

type GetUserCronyListReq struct {
	IsNeedTotal   *int64  `json:"isNeedTotal,optional"`
	OwnerUserId   *int64  `json:"ownerUserId,optional"`
	OwnerUserName *string `json:"ownerName,optional"`
	GroupId       *int64  `json:"groupId,optional"`
	TypeEms       *string `json:"typeEms,optional"`
	AddStartTime  *string `json:"addStartTime,optional"`
	AddEndTime    *string `json:"addEndTime,optional"`
}

type UserCronyInfo struct {
	Id               *int64  `json:"id,string,omitempty"`
	OwnerUserId      *int64  `json:"ownerUserId,string,omitempty"`
	TargetUserId     *int64  `json:"targetUserId,string,omitempty"`
	TargetUserName   *string `json:"targetUserName,omitempty"`
	TargetUserAvatar *string `json:"targetUserAvatar,omitempty"`
	NameNote         *string `json:"nameNote,omitempty"`
	Remark           *string `json:"remark,omitempty"`
}

type GetUserCronyListResp struct {
	List  []*UserCronyInfo `json:"list"`
	Total *int64           `json:"total,omitempty"`
}
