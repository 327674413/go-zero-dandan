// Code generated by goctl. DO NOT EDIT.
package userInfo

import (
	"context"

	"go-zero-dandan/app/user/api/internal/svc"
	"go-zero-dandan/app/user/api/internal/types"

	"github.com/zeromicro/go-zero/core/logx"
	"go-zero-dandan/common/resd"
	"go-zero-dandan/common/typed"
	"strings"
)

type EditMyInfoLogicGen struct {
	logx.Logger
	ctx          context.Context
	svc          *svc.ServiceContext
	resd         *resd.Resp
	meta         *typed.ReqMeta
	hasUserInfo  bool
	mustUserInfo bool
	req          struct {
		Nickname     string `json:"nickname,optional"`
		SexEm        int64  `json:"sexEm,optional"`
		Avatar       string `json:"avatar,optional"`
		GraduateFrom string `json:"graduateFrom,optional"`
		BirthDate    string `json:"birthDate,optional"`
	}
	hasReq struct {
		Nickname     bool
		SexEm        bool
		Avatar       bool
		GraduateFrom bool
		BirthDate    bool
	}
}

func NewEditMyInfoLogicGen(ctx context.Context, svc *svc.ServiceContext) *EditMyInfoLogicGen {
	meta, _ := ctx.Value("reqMeta").(*typed.ReqMeta)
	if meta == nil {
		meta = &typed.ReqMeta{}
	}
	return &EditMyInfoLogicGen{
		Logger: logx.WithContext(ctx),
		ctx:    ctx,
		svc:    svc,
		resd:   resd.NewResp(ctx, meta.Lang),
		meta:   meta,
	}
}

func (l *EditMyInfoLogicGen) initReq(in *types.EditMyInfoReq) error {

	if in.Nickname != nil {
		l.req.Nickname = strings.TrimSpace(*in.Nickname)
		l.hasReq.Nickname = true
	} else {
		l.hasReq.Nickname = false
	}

	if in.SexEm != nil {
		l.req.SexEm = *in.SexEm
		l.hasReq.SexEm = true
	} else {
		l.hasReq.SexEm = false
	}

	if in.Avatar != nil {
		l.req.Avatar = strings.TrimSpace(*in.Avatar)
		l.hasReq.Avatar = true
	} else {
		l.hasReq.Avatar = false
	}

	if in.GraduateFrom != nil {
		l.req.GraduateFrom = strings.TrimSpace(*in.GraduateFrom)
		l.hasReq.GraduateFrom = true
	} else {
		l.hasReq.GraduateFrom = false
	}

	if in.BirthDate != nil {
		l.req.BirthDate = strings.TrimSpace(*in.BirthDate)
		l.hasReq.BirthDate = true
	} else {
		l.hasReq.BirthDate = false
	}
	l.hasUserInfo = true
	l.mustUserInfo = true

	return nil
}
