// Code generated by goctl. DO NOT EDIT.
syntax = "proto3";
	
option go_package = "./userRpc";

package user;

message EmptyReq{}
message MatchField {
	optional string type = 1;
	optional string str = 2;
	repeated string strs = 3;
	optional int64 num = 4;
	repeated int64 nums = 5;
	optional bool isFuzzy = 6;
	optional string raws = 7;
}
message BindUnionUserReq {
	optional string userId = 1;
	optional int64 bindClasEm = 2;
	optional string account = 3;
	optional string phone = 4;
	optional string platId = 5;
}
message BindUnionUserResp {
	 string unionId = 1;
}
message LoginByAccountReq {
	optional string platId = 1;
	optional string account = 2;
	optional string password = 3;
}
message RegByAccountReq {
	optional string platId = 1;
	optional string account = 2;
	optional string password = 3;
	optional string nickname = 4;
	optional string phone = 5;
	optional string phoneArea = 6;
	optional int64 sexEm = 7;
	optional string email = 8;
	optional string avatarImg = 9;
	optional int64 isLogin = 10;
}
message GetUserPageReq {
	optional int64 page = 1;
	optional int64 size = 2;
	optional string platId = 3;
	optional int64 needTotal = 4;
	 map<string, MatchField> match = 5;
}
message GetUserPageResp {
	 int64 total = 1;
	repeated UserMainInfo list = 2;
}
message LoginResp {
	 string id = 1;
	 string token = 2;
	 int64 expireAt = 3;
	optional UserMainInfo userInfo = 4;
}
message GetUserInfoReq {
	repeated string ids = 1;
	optional string platId = 2;
}
message UserNormalInfo {
	optional UserMainInfo mainInfo = 1;
}
message GetUserNormalInfoResp {
	 map<string, UserNormalInfo> users = 1;
}
message UserMainInfo {
	 string id = 1;
	 string unionId = 2;
	 int64 stateEm = 3;
	 string account = 4;
	 string nickname = 5;
	 string phone = 6;
	 string phoneArea = 7;
	 int64 sexEm = 8;
	 string email = 9;
	 string avatarImg = 10;
	 string platId = 11;
	 string signature = 12;
}
message EditUserInfoReq {
	optional string id = 1;
	optional string nickname = 2;
	optional int64 sexEm = 3;
	optional string email = 4;
	optional string avatarImg = 5;
	optional string graduateFrom = 6;
	optional string birthDate = 7;
	optional string platId = 8;
}
message IdReq {
	optional string id = 1;
	optional string platId = 2;
}
message TokenReq {
	optional string token = 1;
}
message SuccResp {
	 int64 code = 1;
}

	
service user {
	rpc getUserByToken(TokenReq) returns (UserMainInfo);
	rpc editUserInfo(EditUserInfoReq) returns (SuccResp);
	rpc regByAccount(RegByAccountReq) returns (LoginResp);
	rpc getUserById(IdReq) returns (UserMainInfo);
	rpc getUserPage(GetUserPageReq) returns (GetUserPageResp);
	rpc bindUnionUser(BindUnionUserReq) returns (BindUnionUserResp);
	rpc getUserNormalInfo(GetUserInfoReq) returns (GetUserNormalInfoResp);
}

