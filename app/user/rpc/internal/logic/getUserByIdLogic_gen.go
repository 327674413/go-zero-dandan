// Code generated by goctl. DO NOT EDIT.
package logic

import (
	"context"
	"go-zero-dandan/app/user/rpc/internal/svc"
	"go-zero-dandan/app/user/rpc/types/userRpc"
	"go-zero-dandan/common/resd"
	"go-zero-dandan/common/typed"

	"github.com/zeromicro/go-zero/core/logx"
)

type GetUserByIdLogicGen struct {
	ctx  context.Context
	svc  *svc.ServiceContext
	resd *resd.Resp
	meta *typed.ReqMeta
	logx.Logger
	req struct {
		Id string
	}
	hasReq struct {
		Id bool
	}
}

func NewGetUserByIdLogicGen(ctx context.Context, svc *svc.ServiceContext) *GetUserByIdLogicGen {
	meta, _ := ctx.Value("reqMeta").(*typed.ReqMeta)
	if meta == nil {
		meta = &typed.ReqMeta{}
	}
	return &GetUserByIdLogicGen{
		ctx:    ctx,
		svc:    svc,
		Logger: logx.WithContext(ctx),
		resd:   resd.NewResp(ctx, resd.I18n.NewLang(meta.Lang)),
		meta:   meta,
	}
}

func (l *GetUserByIdLogicGen) initReq(req *userRpc.IdReq) error {

	if req.Id != nil {
		l.req.Id = *req.Id
		l.hasReq.Id = true
	} else {
		l.hasReq.Id = false
	}

	return nil
}
