// Code generated by goctl. DO NOT EDIT.
package logic

import (
	"context"
	"go-zero-dandan/app/user/rpc/internal/svc"
	"go-zero-dandan/app/user/rpc/types/userRpc"
	"go-zero-dandan/common/resd"
	"go-zero-dandan/common/typed"

	"github.com/zeromicro/go-zero/core/logx"
)

type BindUnionUserLogicGen struct {
	ctx  context.Context
	svc  *svc.ServiceContext
	resd *resd.Resp
	meta *typed.ReqMeta
	logx.Logger
	req struct {
		UserId     string
		BindClasEm int64
		Account    string
		Phone      string
		PlatId     string
	}
	hasReq struct {
		UserId     bool
		BindClasEm bool
		Account    bool
		Phone      bool
		PlatId     bool
	}
}

func NewBindUnionUserLogicGen(ctx context.Context, svc *svc.ServiceContext) *BindUnionUserLogicGen {
	meta, _ := ctx.Value("reqMeta").(*typed.ReqMeta)
	if meta == nil {
		meta = &typed.ReqMeta{}
	}
	return &BindUnionUserLogicGen{
		ctx:    ctx,
		svc:    svc,
		Logger: logx.WithContext(ctx),
		resd:   resd.NewResp(ctx, meta.Lang),
		meta:   meta,
	}
}

func (l *BindUnionUserLogicGen) initReq(req *userRpc.BindUnionUserReq) error {

	if req.UserId != nil {
		l.req.UserId = *req.UserId
		l.hasReq.UserId = true
	} else {
		l.hasReq.UserId = false
	}

	if req.BindClasEm != nil {
		l.req.BindClasEm = *req.BindClasEm
		l.hasReq.BindClasEm = true
	} else {
		l.hasReq.BindClasEm = false
	}

	if req.Account != nil {
		l.req.Account = *req.Account
		l.hasReq.Account = true
	} else {
		l.hasReq.Account = false
	}

	if req.Phone != nil {
		l.req.Phone = *req.Phone
		l.hasReq.Phone = true
	} else {
		l.hasReq.Phone = false
	}

	if req.PlatId != nil {
		l.req.PlatId = *req.PlatId
		l.hasReq.PlatId = true
	} else {
		l.hasReq.PlatId = false
	}

	return nil
}
