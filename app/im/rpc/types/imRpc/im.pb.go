// Code generated by goctl. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.19.4
// source: im.proto

package imRpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyReq) Reset() {
	*x = EmptyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyReq) ProtoMessage() {}

func (x *EmptyReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyReq.ProtoReflect.Descriptor instead.
func (*EmptyReq) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{0}
}

type ChatLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ConversationId string `protobuf:"bytes,2,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
	SendId         string `protobuf:"bytes,3,opt,name=sendId,proto3" json:"sendId,omitempty"`
	RecvId         string `protobuf:"bytes,4,opt,name=recvId,proto3" json:"recvId,omitempty"`
	MsgType        int64  `protobuf:"varint,5,opt,name=msgType,proto3" json:"msgType,omitempty"`
	MsgContent     string `protobuf:"bytes,6,opt,name=msgContent,proto3" json:"msgContent,omitempty"`
	ChatType       int64  `protobuf:"varint,7,opt,name=chatType,proto3" json:"chatType,omitempty"`
	SendTime       string `protobuf:"bytes,8,opt,name=sendTime,proto3" json:"sendTime,omitempty"`
	SendAtMs       int64  `protobuf:"varint,9,opt,name=sendAtMs,proto3" json:"sendAtMs,omitempty"`
	MsgReads       []byte `protobuf:"bytes,10,opt,name=msgReads,proto3" json:"msgReads,omitempty"`
	MsgState       int64  `protobuf:"varint,11,opt,name=msgState,proto3" json:"msgState,omitempty"`
}

func (x *ChatLog) Reset() {
	*x = ChatLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatLog) ProtoMessage() {}

func (x *ChatLog) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatLog.ProtoReflect.Descriptor instead.
func (*ChatLog) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{1}
}

func (x *ChatLog) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatLog) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *ChatLog) GetSendId() string {
	if x != nil {
		return x.SendId
	}
	return ""
}

func (x *ChatLog) GetRecvId() string {
	if x != nil {
		return x.RecvId
	}
	return ""
}

func (x *ChatLog) GetMsgType() int64 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *ChatLog) GetMsgContent() string {
	if x != nil {
		return x.MsgContent
	}
	return ""
}

func (x *ChatLog) GetChatType() int64 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

func (x *ChatLog) GetSendTime() string {
	if x != nil {
		return x.SendTime
	}
	return ""
}

func (x *ChatLog) GetSendAtMs() int64 {
	if x != nil {
		return x.SendAtMs
	}
	return 0
}

func (x *ChatLog) GetMsgReads() []byte {
	if x != nil {
		return x.MsgReads
	}
	return nil
}

func (x *ChatLog) GetMsgState() int64 {
	if x != nil {
		return x.MsgState
	}
	return 0
}

type Conversation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string   `protobuf:"bytes,1,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
	ChatType       int64    `protobuf:"varint,2,opt,name=chatType,proto3" json:"chatType,omitempty"`
	TargetId       string   `protobuf:"bytes,3,opt,name=targetId,proto3" json:"targetId,omitempty"`
	IsShow         bool     `protobuf:"varint,4,opt,name=isShow,proto3" json:"isShow,omitempty"`
	ReadSeq        int64    `protobuf:"varint,5,opt,name=readSeq,proto3" json:"readSeq,omitempty"`
	DeleteSeq      int64    `protobuf:"varint,6,opt,name=deleteSeq,proto3" json:"deleteSeq,omitempty"`
	Total          int64    `protobuf:"varint,7,opt,name=total,proto3" json:"total,omitempty"`
	Unread         int64    `protobuf:"varint,8,opt,name=unread,proto3" json:"unread,omitempty"`
	Read           int64    `protobuf:"varint,9,opt,name=read,proto3" json:"read,omitempty"`
	LastMsg        *ChatLog `protobuf:"bytes,10,opt,name=lastMsg,proto3" json:"lastMsg,omitempty"`
	LastAtMs       int64    `protobuf:"varint,11,opt,name=lastAtMs,proto3" json:"lastAtMs,omitempty"`
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{2}
}

func (x *Conversation) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *Conversation) GetChatType() int64 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

func (x *Conversation) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Conversation) GetIsShow() bool {
	if x != nil {
		return x.IsShow
	}
	return false
}

func (x *Conversation) GetReadSeq() int64 {
	if x != nil {
		return x.ReadSeq
	}
	return 0
}

func (x *Conversation) GetDeleteSeq() int64 {
	if x != nil {
		return x.DeleteSeq
	}
	return 0
}

func (x *Conversation) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Conversation) GetUnread() int64 {
	if x != nil {
		return x.Unread
	}
	return 0
}

func (x *Conversation) GetRead() int64 {
	if x != nil {
		return x.Read
	}
	return 0
}

func (x *Conversation) GetLastMsg() *ChatLog {
	if x != nil {
		return x.LastMsg
	}
	return nil
}

func (x *Conversation) GetLastAtMs() int64 {
	if x != nil {
		return x.LastAtMs
	}
	return 0
}

type GetConversationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *string `protobuf:"bytes,1,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
}

func (x *GetConversationsReq) Reset() {
	*x = GetConversationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationsReq) ProtoMessage() {}

func (x *GetConversationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationsReq.ProtoReflect.Descriptor instead.
func (*GetConversationsReq) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{3}
}

func (x *GetConversationsReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

type GetConversationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationList map[string]*Conversation `protobuf:"bytes,1,rep,name=conversationList,proto3" json:"conversationList,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetConversationsResp) Reset() {
	*x = GetConversationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationsResp) ProtoMessage() {}

func (x *GetConversationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationsResp.ProtoReflect.Descriptor instead.
func (*GetConversationsResp) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{4}
}

func (x *GetConversationsResp) GetConversationList() map[string]*Conversation {
	if x != nil {
		return x.ConversationList
	}
	return nil
}

type SendSysMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     *string `protobuf:"bytes,1,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	MsgTypeEm  *int64  `protobuf:"varint,2,opt,name=msgTypeEm,proto3,oneof" json:"msgTypeEm,omitempty"`
	MsgContent *string `protobuf:"bytes,3,opt,name=msgContent,proto3,oneof" json:"msgContent,omitempty"`
	SendTime   *string `protobuf:"bytes,4,opt,name=sendTime,proto3,oneof" json:"sendTime,omitempty"`
	MsgClasEm  *int64  `protobuf:"varint,5,opt,name=msgClasEm,proto3,oneof" json:"msgClasEm,omitempty"`
}

func (x *SendSysMsgReq) Reset() {
	*x = SendSysMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendSysMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSysMsgReq) ProtoMessage() {}

func (x *SendSysMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSysMsgReq.ProtoReflect.Descriptor instead.
func (*SendSysMsgReq) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{5}
}

func (x *SendSysMsgReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *SendSysMsgReq) GetMsgTypeEm() int64 {
	if x != nil && x.MsgTypeEm != nil {
		return *x.MsgTypeEm
	}
	return 0
}

func (x *SendSysMsgReq) GetMsgContent() string {
	if x != nil && x.MsgContent != nil {
		return *x.MsgContent
	}
	return ""
}

func (x *SendSysMsgReq) GetSendTime() string {
	if x != nil && x.SendTime != nil {
		return *x.SendTime
	}
	return ""
}

func (x *SendSysMsgReq) GetMsgClasEm() int64 {
	if x != nil && x.MsgClasEm != nil {
		return *x.MsgClasEm
	}
	return 0
}

type PutConversationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               *string                  `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	UserId           *string                  `protobuf:"bytes,2,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	ConversationList map[string]*Conversation `protobuf:"bytes,3,rep,name=conversationList,proto3" json:"conversationList,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PutConversationsReq) Reset() {
	*x = PutConversationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutConversationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutConversationsReq) ProtoMessage() {}

func (x *PutConversationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutConversationsReq.ProtoReflect.Descriptor instead.
func (*PutConversationsReq) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{6}
}

func (x *PutConversationsReq) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *PutConversationsReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *PutConversationsReq) GetConversationList() map[string]*Conversation {
	if x != nil {
		return x.ConversationList
	}
	return nil
}

type PutConversationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PutConversationsResp) Reset() {
	*x = PutConversationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutConversationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutConversationsResp) ProtoMessage() {}

func (x *PutConversationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutConversationsResp.ProtoReflect.Descriptor instead.
func (*PutConversationsResp) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{7}
}

type GetChatLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId *string `protobuf:"bytes,1,opt,name=conversationId,proto3,oneof" json:"conversationId,omitempty"`
	StartSendAt    *int64  `protobuf:"varint,2,opt,name=startSendAt,proto3,oneof" json:"startSendAt,omitempty"`
	EndSendAt      *int64  `protobuf:"varint,3,opt,name=endSendAt,proto3,oneof" json:"endSendAt,omitempty"`
	Count          *int64  `protobuf:"varint,4,opt,name=count,proto3,oneof" json:"count,omitempty"`
	MsgId          *string `protobuf:"bytes,5,opt,name=msgId,proto3,oneof" json:"msgId,omitempty"`
}

func (x *GetChatLogReq) Reset() {
	*x = GetChatLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatLogReq) ProtoMessage() {}

func (x *GetChatLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatLogReq.ProtoReflect.Descriptor instead.
func (*GetChatLogReq) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{8}
}

func (x *GetChatLogReq) GetConversationId() string {
	if x != nil && x.ConversationId != nil {
		return *x.ConversationId
	}
	return ""
}

func (x *GetChatLogReq) GetStartSendAt() int64 {
	if x != nil && x.StartSendAt != nil {
		return *x.StartSendAt
	}
	return 0
}

func (x *GetChatLogReq) GetEndSendAt() int64 {
	if x != nil && x.EndSendAt != nil {
		return *x.EndSendAt
	}
	return 0
}

func (x *GetChatLogReq) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *GetChatLogReq) GetMsgId() string {
	if x != nil && x.MsgId != nil {
		return *x.MsgId
	}
	return ""
}

type GetChatLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ChatLog `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetChatLogResp) Reset() {
	*x = GetChatLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatLogResp) ProtoMessage() {}

func (x *GetChatLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatLogResp.ProtoReflect.Descriptor instead.
func (*GetChatLogResp) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{9}
}

func (x *GetChatLogResp) GetList() []*ChatLog {
	if x != nil {
		return x.List
	}
	return nil
}

type SetUpUserConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendId   *string `protobuf:"bytes,1,opt,name=sendId,proto3,oneof" json:"sendId,omitempty"`
	RecvId   *string `protobuf:"bytes,2,opt,name=recvId,proto3,oneof" json:"recvId,omitempty"`
	ChatType *int64  `protobuf:"varint,3,opt,name=chatType,proto3,oneof" json:"chatType,omitempty"`
}

func (x *SetUpUserConversationReq) Reset() {
	*x = SetUpUserConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUpUserConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUpUserConversationReq) ProtoMessage() {}

func (x *SetUpUserConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUpUserConversationReq.ProtoReflect.Descriptor instead.
func (*SetUpUserConversationReq) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{10}
}

func (x *SetUpUserConversationReq) GetSendId() string {
	if x != nil && x.SendId != nil {
		return *x.SendId
	}
	return ""
}

func (x *SetUpUserConversationReq) GetRecvId() string {
	if x != nil && x.RecvId != nil {
		return *x.RecvId
	}
	return ""
}

func (x *SetUpUserConversationReq) GetChatType() int64 {
	if x != nil && x.ChatType != nil {
		return *x.ChatType
	}
	return 0
}

type SetUpUserConversationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetUpUserConversationResp) Reset() {
	*x = SetUpUserConversationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUpUserConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUpUserConversationResp) ProtoMessage() {}

func (x *SetUpUserConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUpUserConversationResp.ProtoReflect.Descriptor instead.
func (*SetUpUserConversationResp) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{11}
}

type CreateGroupConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId  *string `protobuf:"bytes,1,opt,name=groupId,proto3,oneof" json:"groupId,omitempty"`
	CreateId *string `protobuf:"bytes,2,opt,name=createId,proto3,oneof" json:"createId,omitempty"`
}

func (x *CreateGroupConversationReq) Reset() {
	*x = CreateGroupConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupConversationReq) ProtoMessage() {}

func (x *CreateGroupConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupConversationReq.ProtoReflect.Descriptor instead.
func (*CreateGroupConversationReq) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{12}
}

func (x *CreateGroupConversationReq) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

func (x *CreateGroupConversationReq) GetCreateId() string {
	if x != nil && x.CreateId != nil {
		return *x.CreateId
	}
	return ""
}

type CreateGroupConversationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateGroupConversationResp) Reset() {
	*x = CreateGroupConversationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupConversationResp) ProtoMessage() {}

func (x *CreateGroupConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupConversationResp.ProtoReflect.Descriptor instead.
func (*CreateGroupConversationResp) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{13}
}

type ResultResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ResultResp) Reset() {
	*x = ResultResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultResp) ProtoMessage() {}

func (x *ResultResp) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultResp.ProtoReflect.Descriptor instead.
func (*ResultResp) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{14}
}

func (x *ResultResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResultResp) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type GetUserSysMsgUnreadNumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    *string `protobuf:"bytes,1,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	MsgClasEm *int64  `protobuf:"varint,2,opt,name=msgClasEm,proto3,oneof" json:"msgClasEm,omitempty"`
}

func (x *GetUserSysMsgUnreadNumReq) Reset() {
	*x = GetUserSysMsgUnreadNumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSysMsgUnreadNumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSysMsgUnreadNumReq) ProtoMessage() {}

func (x *GetUserSysMsgUnreadNumReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSysMsgUnreadNumReq.ProtoReflect.Descriptor instead.
func (*GetUserSysMsgUnreadNumReq) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{15}
}

func (x *GetUserSysMsgUnreadNumReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *GetUserSysMsgUnreadNumReq) GetMsgClasEm() int64 {
	if x != nil && x.MsgClasEm != nil {
		return *x.MsgClasEm
	}
	return 0
}

type GetUserSysMsgUnreadNumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unread map[int64]int64 `protobuf:"bytes,1,rep,name=unread,proto3" json:"unread,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetUserSysMsgUnreadNumResp) Reset() {
	*x = GetUserSysMsgUnreadNumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSysMsgUnreadNumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSysMsgUnreadNumResp) ProtoMessage() {}

func (x *GetUserSysMsgUnreadNumResp) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSysMsgUnreadNumResp.ProtoReflect.Descriptor instead.
func (*GetUserSysMsgUnreadNumResp) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserSysMsgUnreadNumResp) GetUnread() map[int64]int64 {
	if x != nil {
		return x.Unread
	}
	return nil
}

type SetUserSysMsgReadByClasReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   *string `protobuf:"bytes,1,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	ClasList []int64 `protobuf:"varint,2,rep,packed,name=clasList,proto3" json:"clasList,omitempty"`
}

func (x *SetUserSysMsgReadByClasReq) Reset() {
	*x = SetUserSysMsgReadByClasReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserSysMsgReadByClasReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserSysMsgReadByClasReq) ProtoMessage() {}

func (x *SetUserSysMsgReadByClasReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserSysMsgReadByClasReq.ProtoReflect.Descriptor instead.
func (*SetUserSysMsgReadByClasReq) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{17}
}

func (x *SetUserSysMsgReadByClasReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *SetUserSysMsgReadByClasReq) GetClasList() []int64 {
	if x != nil {
		return x.ClasList
	}
	return nil
}

type SetUserSysMsgReadByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    *string  `protobuf:"bytes,1,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	MsgIdList []string `protobuf:"bytes,2,rep,name=msgIdList,proto3" json:"msgIdList,omitempty"`
}

func (x *SetUserSysMsgReadByIdReq) Reset() {
	*x = SetUserSysMsgReadByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserSysMsgReadByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserSysMsgReadByIdReq) ProtoMessage() {}

func (x *SetUserSysMsgReadByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserSysMsgReadByIdReq.ProtoReflect.Descriptor instead.
func (*SetUserSysMsgReadByIdReq) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{18}
}

func (x *SetUserSysMsgReadByIdReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *SetUserSysMsgReadByIdReq) GetMsgIdList() []string {
	if x != nil {
		return x.MsgIdList
	}
	return nil
}

type DeleteUserConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         *string `protobuf:"bytes,1,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	ConversationId *string `protobuf:"bytes,2,opt,name=conversationId,proto3,oneof" json:"conversationId,omitempty"`
}

func (x *DeleteUserConversationReq) Reset() {
	*x = DeleteUserConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserConversationReq) ProtoMessage() {}

func (x *DeleteUserConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserConversationReq.ProtoReflect.Descriptor instead.
func (*DeleteUserConversationReq) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteUserConversationReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *DeleteUserConversationReq) GetConversationId() string {
	if x != nil && x.ConversationId != nil {
		return *x.ConversationId
	}
	return ""
}

var File_im_proto protoreflect.FileDescriptor

var file_im_proto_rawDesc = []byte{
	0x0a, 0x08, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x69, 0x6d, 0x22, 0x0a,
	0x0a, 0x08, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x22, 0xb7, 0x02, 0x0a, 0x07, 0x43,
	0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x76, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x63, 0x76, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x73,
	0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x4d, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x4d, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x73, 0x67, 0x52, 0x65, 0x61, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x6d, 0x73, 0x67, 0x52, 0x65, 0x61, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x73, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x22, 0xc3, 0x02, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x61, 0x64, 0x53, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x72, 0x65, 0x61, 0x64, 0x53, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x65, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x4d,
	0x73, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x69, 0x6d, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x74, 0x4d, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x74, 0x4d, 0x73, 0x22, 0x3d, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc9, 0x01, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x5a, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x69,
	0x6d, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x55,
	0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x6d, 0x2e, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfb, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x79,
	0x73, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x45,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x09, 0x6d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x6d,
	0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x09, 0x6d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x73, 0x45, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x04, 0x52, 0x09, 0x6d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x73, 0x45, 0x6d, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6d, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x73,
	0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x73, 0x67, 0x43, 0x6c, 0x61,
	0x73, 0x45, 0x6d, 0x22, 0x8b, 0x02, 0x0a, 0x13, 0x50, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x59, 0x0a,
	0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6d, 0x2e, 0x50, 0x75, 0x74,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x55, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x6d, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x16, 0x0a, 0x14, 0x50, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x81, 0x02, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52,
	0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x21, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x02, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x05,
	0x6d, 0x73, 0x67, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x65, 0x6e, 0x64, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x31, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x69, 0x6d, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x98, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x55, 0x70, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65,
	0x63, 0x76, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x72, 0x65,
	0x63, 0x76, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x08, 0x63, 0x68, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65, 0x6e,
	0x64, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x63, 0x76, 0x49, 0x64, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x53,
	0x65, 0x74, 0x55, 0x70, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x75, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22,
	0x1d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x3a,
	0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x74, 0x0a, 0x19, 0x67, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x79, 0x73, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x73, 0x45,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x09, 0x6d, 0x73, 0x67, 0x43, 0x6c,
	0x61, 0x73, 0x45, 0x6d, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x73, 0x45, 0x6d,
	0x22, 0x9b, 0x01, 0x0a, 0x1a, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x79, 0x73, 0x4d,
	0x73, 0x67, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x42, 0x0a, 0x06, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x69, 0x6d, 0x2e, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x79, 0x73, 0x4d,
	0x73, 0x67, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x2e,
	0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x75, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x1a, 0x39, 0x0a, 0x0b, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x60,
	0x0a, 0x1a, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x79, 0x73, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x61, 0x64, 0x42, 0x79, 0x43, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x61,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x61,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x60, 0x0a, 0x18, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x79, 0x73, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x61, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x73, 0x67,
	0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x73,
	0x67, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x1b, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x32, 0xde, 0x05, 0x0a, 0x02, 0x69, 0x6d, 0x12,
	0x33, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x11, 0x2e,
	0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x55, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e,
	0x69, 0x6d, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x70, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x69, 0x6d,
	0x2e, 0x53, 0x65, 0x74, 0x55, 0x70, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x17,
	0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x45, 0x0a, 0x10, 0x50, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x17, 0x2e, 0x69, 0x6d, 0x2e, 0x50, 0x75, 0x74, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x69, 0x6d, 0x2e, 0x50, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x69, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x69, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x2e, 0x69, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e,
	0x69, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a,
	0x0a, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x79, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x11, 0x2e, 0x69, 0x6d,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x79, 0x73, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x0e,
	0x2e, 0x69, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57,
	0x0a, 0x16, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x79, 0x73, 0x4d, 0x73, 0x67, 0x55,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x2e, 0x69, 0x6d, 0x2e, 0x67, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x79, 0x73, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x69, 0x6d, 0x2e, 0x67, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x79, 0x73, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x4e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x17, 0x73, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x79, 0x73, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x61, 0x64, 0x42, 0x79, 0x43, 0x6c,
	0x61, 0x73, 0x12, 0x1e, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x79, 0x73, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x61, 0x64, 0x42, 0x79, 0x43, 0x6c, 0x61, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x69, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x45, 0x0a, 0x15, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x79, 0x73,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x61, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x69, 0x6d,
	0x2e, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x79, 0x73, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x61, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x69, 0x6d, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x69,
	0x6d, 0x52, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_im_proto_rawDescOnce sync.Once
	file_im_proto_rawDescData = file_im_proto_rawDesc
)

func file_im_proto_rawDescGZIP() []byte {
	file_im_proto_rawDescOnce.Do(func() {
		file_im_proto_rawDescData = protoimpl.X.CompressGZIP(file_im_proto_rawDescData)
	})
	return file_im_proto_rawDescData
}

var file_im_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_im_proto_goTypes = []interface{}{
	(*EmptyReq)(nil),                    // 0: im.EmptyReq
	(*ChatLog)(nil),                     // 1: im.ChatLog
	(*Conversation)(nil),                // 2: im.Conversation
	(*GetConversationsReq)(nil),         // 3: im.GetConversationsReq
	(*GetConversationsResp)(nil),        // 4: im.GetConversationsResp
	(*SendSysMsgReq)(nil),               // 5: im.SendSysMsgReq
	(*PutConversationsReq)(nil),         // 6: im.PutConversationsReq
	(*PutConversationsResp)(nil),        // 7: im.PutConversationsResp
	(*GetChatLogReq)(nil),               // 8: im.GetChatLogReq
	(*GetChatLogResp)(nil),              // 9: im.GetChatLogResp
	(*SetUpUserConversationReq)(nil),    // 10: im.SetUpUserConversationReq
	(*SetUpUserConversationResp)(nil),   // 11: im.SetUpUserConversationResp
	(*CreateGroupConversationReq)(nil),  // 12: im.CreateGroupConversationReq
	(*CreateGroupConversationResp)(nil), // 13: im.CreateGroupConversationResp
	(*ResultResp)(nil),                  // 14: im.ResultResp
	(*GetUserSysMsgUnreadNumReq)(nil),   // 15: im.getUserSysMsgUnreadNumReq
	(*GetUserSysMsgUnreadNumResp)(nil),  // 16: im.getUserSysMsgUnreadNumResp
	(*SetUserSysMsgReadByClasReq)(nil),  // 17: im.setUserSysMsgReadByClasReq
	(*SetUserSysMsgReadByIdReq)(nil),    // 18: im.setUserSysMsgReadByIdReq
	(*DeleteUserConversationReq)(nil),   // 19: im.DeleteUserConversationReq
	nil,                                 // 20: im.GetConversationsResp.ConversationListEntry
	nil,                                 // 21: im.PutConversationsReq.ConversationListEntry
	nil,                                 // 22: im.getUserSysMsgUnreadNumResp.UnreadEntry
}
var file_im_proto_depIdxs = []int32{
	1,  // 0: im.Conversation.lastMsg:type_name -> im.ChatLog
	20, // 1: im.GetConversationsResp.conversationList:type_name -> im.GetConversationsResp.ConversationListEntry
	21, // 2: im.PutConversationsReq.conversationList:type_name -> im.PutConversationsReq.ConversationListEntry
	1,  // 3: im.GetChatLogResp.list:type_name -> im.ChatLog
	22, // 4: im.getUserSysMsgUnreadNumResp.unread:type_name -> im.getUserSysMsgUnreadNumResp.UnreadEntry
	2,  // 5: im.GetConversationsResp.ConversationListEntry.value:type_name -> im.Conversation
	2,  // 6: im.PutConversationsReq.ConversationListEntry.value:type_name -> im.Conversation
	8,  // 7: im.im.GetChatLog:input_type -> im.GetChatLogReq
	10, // 8: im.im.SetUpUserConversation:input_type -> im.SetUpUserConversationReq
	3,  // 9: im.im.GetConversations:input_type -> im.GetConversationsReq
	6,  // 10: im.im.PutConversations:input_type -> im.PutConversationsReq
	12, // 11: im.im.CreateGroupConversation:input_type -> im.CreateGroupConversationReq
	19, // 12: im.im.DeleteUserConversation:input_type -> im.DeleteUserConversationReq
	5,  // 13: im.im.SendSysMsg:input_type -> im.SendSysMsgReq
	15, // 14: im.im.getUserSysMsgUnreadNum:input_type -> im.getUserSysMsgUnreadNumReq
	17, // 15: im.im.setUserSysMsgReadByClas:input_type -> im.setUserSysMsgReadByClasReq
	18, // 16: im.im.setUserSysMsgReadById:input_type -> im.setUserSysMsgReadByIdReq
	9,  // 17: im.im.GetChatLog:output_type -> im.GetChatLogResp
	11, // 18: im.im.SetUpUserConversation:output_type -> im.SetUpUserConversationResp
	4,  // 19: im.im.GetConversations:output_type -> im.GetConversationsResp
	7,  // 20: im.im.PutConversations:output_type -> im.PutConversationsResp
	13, // 21: im.im.CreateGroupConversation:output_type -> im.CreateGroupConversationResp
	14, // 22: im.im.DeleteUserConversation:output_type -> im.ResultResp
	14, // 23: im.im.SendSysMsg:output_type -> im.ResultResp
	16, // 24: im.im.getUserSysMsgUnreadNum:output_type -> im.getUserSysMsgUnreadNumResp
	14, // 25: im.im.setUserSysMsgReadByClas:output_type -> im.ResultResp
	14, // 26: im.im.setUserSysMsgReadById:output_type -> im.ResultResp
	17, // [17:27] is the sub-list for method output_type
	7,  // [7:17] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_im_proto_init() }
func file_im_proto_init() {
	if File_im_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_im_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conversation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendSysMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutConversationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutConversationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUpUserConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUpUserConversationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupConversationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSysMsgUnreadNumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSysMsgUnreadNumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserSysMsgReadByClasReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserSysMsgReadByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_im_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_im_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_im_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_im_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_im_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_im_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_im_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_im_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_im_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_im_proto_msgTypes[19].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_im_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_im_proto_goTypes,
		DependencyIndexes: file_im_proto_depIdxs,
		MessageInfos:      file_im_proto_msgTypes,
	}.Build()
	File_im_proto = out.File
	file_im_proto_rawDesc = nil
	file_im_proto_goTypes = nil
	file_im_proto_depIdxs = nil
}
