syntax = "proto3";

// protoc-gen-go 版本大于1.4.0, proto文件需要加上go_package,否则无法生成
option go_package = "./pb";

package im;

message ChatLog {
  string id = 1;
  string conversationId = 2;
  int64 sendId = 3;
  int64 recvId = 4;
  int64 msgType = 5;
  string msgContent = 6;
  int64 chatType = 7;
  int64 SendTime = 8;
  bytes readRecords = 9;
}
message Conversation {
  string conversationId = 1;
  int64 chatType = 2;
  int64 targetId = 3;
  bool isShow = 4;
  int64 seq = 5;
  // 总消息数
  int64 total = 6;
  // 未读消息数
  int64 toRead = 7;
  // 已读消息
  int64 Read = 9;
  ChatLog msg = 8;
}
message GetConversationsReq {
  int64 userId = 1;
}
message GetConversationsResp {
  map<string, Conversation> conversationList = 2;
}

message PutConversationsReq {
  string id = 1;
  int64 userId = 2;
  map<string, Conversation> conversationList = 3;
}
message PutConversationsResp {}
message GetChatLogReq {
  string conversationId = 1;
  int64 startSendTime = 2;
  int64 endSendTime = 3;
  int64 count = 4;
  string msgId = 5;
}
message GetChatLogResp {
  repeated ChatLog List = 1;
}

message SetUpUserConversationReq{
  int64 SendId = 1;
  int64 recvId = 2;
  int64 chatType = 3;
}
message SetUpUserConversationResp{}

message CreateGroupConversationReq {
  int64 GroupId = 1;
  int64 CreateId = 2;
}
message CreateGroupConversationResp {}

service Im {
  // 获取会话记录
  rpc GetChatLog(GetChatLogReq) returns(GetChatLogResp);
  // 建立会话: 群聊, 私聊
  rpc SetUpUserConversation(SetUpUserConversationReq) returns(SetUpUserConversationResp);
  // 获取会话
  rpc GetConversations(GetConversationsReq) returns(GetConversationsResp);
  // 更新会话
  rpc PutConversations(PutConversationsReq)  returns(PutConversationsResp);

  rpc CreateGroupConversation(CreateGroupConversationReq) returns(CreateGroupConversationResp);
}