// Code generated by goctl. DO NOT EDIT.
package friend

import (
	"context"

	"go-zero-dandan/app/im/api/internal/svc"
	"go-zero-dandan/app/im/api/internal/types"

	"github.com/zeromicro/go-zero/core/logx"
	"go-zero-dandan/common/resd"
	"go-zero-dandan/common/typed"
)

type CreateFriendApplyLogicGen struct {
	logx.Logger
	ctx          context.Context
	svc          *svc.ServiceContext
	resd         *resd.Resp
	meta         *typed.ReqMeta
	hasUserInfo  bool
	mustUserInfo bool
	req          struct {
		ApplyMsg  string `json:"applyMsg,optional"`
		FriendUid string `json:"friendUid,optional" check:"required"`
		SourceEm  int64  `json:"sourceEm,optional" check:"required"`
	}
	hasReq struct {
		ApplyMsg  bool
		FriendUid bool
		SourceEm  bool
	}
}

func NewCreateFriendApplyLogicGen(ctx context.Context, svc *svc.ServiceContext) *CreateFriendApplyLogicGen {
	meta, _ := ctx.Value("reqMeta").(*typed.ReqMeta)
	if meta == nil {
		meta = &typed.ReqMeta{}
	}
	return &CreateFriendApplyLogicGen{
		Logger: logx.WithContext(ctx),
		ctx:    ctx,
		svc:    svc,
		resd:   resd.NewResp(ctx, resd.I18n.NewLang(meta.Lang)),
		meta:   meta,
	}
}

func (l *CreateFriendApplyLogicGen) initReq(req *types.CreateFriendApplyReq) error {

	if req.ApplyMsg != nil {
		l.req.ApplyMsg = *req.ApplyMsg
		l.hasReq.ApplyMsg = true
	} else {
		l.hasReq.ApplyMsg = false
	}

	if req.FriendUid != nil {
		l.req.FriendUid = *req.FriendUid
		l.hasReq.FriendUid = true
	} else {
		l.hasReq.FriendUid = false
	}

	if l.hasReq.FriendUid == false {
		return resd.NewErrWithTempCtx(l.ctx, "缺少参数FriendUid", resd.ErrReqFieldRequired1, "*FriendUid")
	}

	if l.req.FriendUid == "" {
		return resd.NewErrWithTempCtx(l.ctx, "FriendUid不得为空", resd.ErrReqFieldEmpty1, "*FriendUid")
	}

	if req.SourceEm != nil {
		l.req.SourceEm = *req.SourceEm
		l.hasReq.SourceEm = true
	} else {
		l.hasReq.SourceEm = false
	}

	if l.hasReq.SourceEm == false {
		return resd.NewErrWithTempCtx(l.ctx, "缺少参数SourceEm", resd.ErrReqFieldRequired1, "*SourceEm")
	}
	l.hasUserInfo = true
	l.mustUserInfo = true

	return nil
}
