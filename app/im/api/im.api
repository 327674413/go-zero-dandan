import (
	"desc/main.api"
	"desc/conversation.api"
)

@server(
	timeout: 30s
	middleware: MetaMiddleware,UserInfoMiddleware,UserTokenMiddleware
	jwt: Auth
	group: friend
	prefix: social/v1
)
service im-api {
	@doc "好友申请"
	@handler createFriendApply
	post /friend/createFriendApply(CreateFriendApplyReq) returns(ResultResp)
	
	@doc "好友申请处理"
	@handler operateMyRecvFriendApply
	post  /friend/operateMyRecvFriendApply(OperateMyRecvFriendApplyReq) returns(ResultResp)
	
	@doc "好友申请列表，我收到的"
	@handler getMyFriendApplyRecvPage
	post  /friend/getMyFriendApplyRecvPage(GetMyFriendApplyRecvPageReq) returns(FriendApplyListResp)
	
	@doc "好友列表"
	@handler getMyFriendList
	post  /friend/getMyFriendList returns(FriendListResp)
	
	@doc "查找新好友"
	@handler searchNewFriendPage
	post  /friend/searchNewFriendPage(SearchNewFriendReq) returns(SearchNewFriendResp)
}

@server(
	timeout: 30s
	middleware: MetaMiddleware,UserInfoMiddleware,UserTokenMiddleware
	jwt: Auth
	group: group
	prefix: social/v1
)
service im-api {
	@doc "创群"
	@handler CreateGroup
	post /group/createGroup(CreateGroupReq) returns(CreateGroupResp)
	
	@doc "申请进群"
	@handler CreateGroupMemberApply
	post  /group/createGroupMemberApply(CreateGroupMemberApplyReq) returns(CreateGroupMemberApplyResp)
	
	@doc "申请进群处理"
	@handler OperateGroupMemberApply
	post  /group/operateGroupMemberApply(OperateGroupMemberApplyReq) returns(ResultResp)
	
	@doc "申请进群列表"
	@handler GetMyGroupApplyRecvList
	post  /group/getMyGroupApplyRecvList returns(GroupApplyListResp)
	
	@doc "用户申群列表"
	@handler GetMyGroupList
	post  /groups/getMyGroupList returns(GroupListResp)
	
	@doc "成员列表"
	@handler GetGroupMemberList
	post  /group/getGroupMemberList(GetGroupMemberListReq) returns(GroupMemberListResp)
	
}

@server(
	timeout: 30s
	middleware: MetaMiddleware,UserInfoMiddleware,UserTokenMiddleware
	jwt: Auth
	group: sysMsg
	prefix: im/v1
)
service im-api {
	@doc "获取我的系统消息未读数"
	@handler getMySysMsgUnreadNum
	post /sysMsg/getMySysMsgUnreadNum (GetMySysMsgUnreadNumReq) returns (GetMySysMsgUnreadNumResp)
	@doc "设置我的系统消息已读，通过消息类型"
	@handler setMySysMsgReadByClas
	post /sysMsg/setMySysMsgReadByClas (SetMySysMsgReadByClasReq) returns (ResultResp)
	@doc "设置我的系统消息已读，通过id"
	@handler setMySysMsgReadById
	post /sysMsg/setMySysMsgReadById (SetMySysMsgReadByIdReq) returns (ResultResp)
}

@server(
	timeout: 30s
	middleware: MetaMiddleware,UserInfoMiddleware,UserTokenMiddleware
	jwt: Auth
	group: conversation
	prefix: im/v1
)
service im-api {
	@doc "根据用户获取聊天记录"
	@handler getChatLog
	post /conversation/getcChatlog(GetChatLogReq) returns(GetChatLogResp)
	
	@doc "建立会话"
	@handler setUpUserConversation
	post /conversation/setUpUserConversation(SetUpUserConversationReq) returns(ResultResp)
	
	@doc "获取会话"
	@handler getConversationList
	post /conversation/getConversationList returns(GetConversationListResp)
	
	@doc "更新会话"
	@handler updateConversationList
	post /conversation/updateConversationList(UpdateConversationListReq) returns(ResultResp)
	
	@doc "删除会话"
	@handler deleteConversation
	post /conversation/deleteMyConv(IdReq) returns(ResultResp)
	
	//	@doc "获取消息的已读未读用户（群聊用）"
	//	@handler getChatLogReadInfo
	//	post /conversation/getChatLogReadInfo(GetChatLogReadInfoReq) returns(GetChatLogReadInfoResp)
}