
type (
	FriendInfo {
		Id        string  `json:"id"`
		FriendUid string `json:"friendUid"`
		FriendName string `json:"friendName"`
		FriendAlias string `json:"friendAlias"`
		FriendIcon string `json:"friendIcon"`
		FriendSexEm int64 `json:"friendSexEm"`
	 	SourceEm int64  `json:"sourcEm"`
		FriendRemark string `json:"friendRemark"`
	}

	FriendApply {
		Id           string  `json:"id"`
		UserId       string `json:"userId"`
		FriendUid     string `json:"friendUid"`
		ApplyLastMsg       string `json:"applyLastMsg"`
		ApplyLastAt      int64  `json:"applyLastAt"`
		OperateMsg    string `json:"operateMsg"`
		OperateAt    int64  `json:"operateAt"`
		StateEm int64  `json:"stateEm"`
		UserName  string `json:"userName"`
		UserSex      int64  `json:"userSex"`
		UserAvatarImg  string `json:"userAvatarImg"`
		FriendName  string `json:"friendName"`
		FriendSex      int64  `json:"friendSex"`
		FriendAvatarImg  string `json:"friendAvatarImg"`
	}

	GroupInfo {
		Id              string `json:"id"`
		Name            string `json:"name"`
		StateEm         int64  `json:"stateEm"`
		TypeEm       	int64  `json:"typeEm"`
		IsVerify        int64   `json:"isVerify"`
		NotiContent    string `json:"notiContent"`
		NotiUid string `json:"notiUid"`
		MemberList		[]*GroupMember `json:"memberList"`
		CreateAt       int64  `json:"create_at"`
	}

	GroupMember {
		Id            string  `json:"id"`
		GroupId       string `json:"groupId"`
		UserId        string `json:"userId"`
		RoleLevel     int64    `json:"roleLevel"`
		JoinAt	int64    `json:"joinAt"`
		JoinSourceEm    int64    `json:"joinSourceEm"`
		InviteUid    string `json:"inviteUid"`
		OperateUid   string `json:"operateUid"`
	}

	GroupMemberApply {
		Id            string  `json:"id"`
		GroupId       string `json:"groupId"`
		UserId        string `json:"userId"`
		ApplyMsg       string `json:"applyMsg"`
		ApplyAt       int64  `json:"applyAt"`
		OperateUid   string `json:"operateUid"`
		OperateMsg    string `json:"operateMsg"`
		OperateAt     int64  `json:"operateAt"`
		OperateStateEm int64  `json:"operateStateEm"`
		JoinSourceEm    int64    `json:"joinSourceEm"`
		InviteUid    string `json:"inviteUid"`
	}
)
type ResultResp{
	Code bool `json:"result"`
	Content string `json:"content"`
}
type (
	CreateFriendApplyReq {
		ApplyMsg  *string `json:"applyMsg,optional"`
		FriendUid  *string `json:"friendUid,optional" check:"required"`
		SourceEm  *int64 `json:"sourceEm,optional" check:"required"`
	}
	CreateGroupReq {
		Name *string `json:"name,optional"`
	}
	CreateGroupResp {
		GroupId *string `json:"groupId,optional"`
	}
	OperateMyRecvFriendApplyReq {
		ApplyId  *string `json:"applyId,optional" check:"required"`
		OperateStateEm *int64 `json:"operateStateEm,optional" check:"required"`
		OperateMsg *string `json:"operaeteMsg,optional"`
	}
	CreateGroupMemberApplyReq {
		GroupId    *string `json:"groupId,optional"`
		GroupCode *string `json:"groupCode,optional"`
		ApplyMsg    *string `json:"applyMsg,optional"`
		SourceEm *int64  `json:"sourceEm,optional"`
	}
	CreateGroupMemberApplyResp {
		ApplyId *string `json:"applyId,optional"`
	}
	OperateGroupMemberApplyReq {
		ApplyId   *string  `json:"applyId,optional"`
		OpreateStateEm *int64  `json:"operateStateEm,optional"` // 处理结果
		OpreateMsg    *string `json:"operateMsg,optional"`
	}
	GetGroupMemberListReq{
		GroupId *string `json:"groupId,optional"`
	}
)
type GetMyFriendApplyRecvPageReq{
	Page *int64 `json:"page,optional"`
	Size *int64 `json:"size,optional"`
}
type (
	FriendApplyListResp {
		List []*FriendApply `json:"list"`
	}
	FriendListResp {
		List []*FriendInfo `json:"list"`
	}
	GroupListResp {
		List []*GroupInfo `json:"list"`
	}
	GroupMemberListResp {
		List []*GroupMember `json:"List"`
	}
	GroupApplyListResp{
		List []*GroupMemberApply `json:"List"`
	}
)


type IdReq{
	Id *string `json:"id,optional" check:"required"`
}

type (
	NewFriendInfo{
		Id string `json:"id"`
		Nickname string `json:"nickname"`
		AvatarImg string `json:"avatarImg"`
		Signature string `json:"signature"`
		StateEm int64 `json:"stateEm"`
	}
	SearchNewFriendReq{
		Keyword *string `json:"keyword,optional"`
	}
	SearchNewFriendResp{
		List []*NewFriendInfo `json:"list"`
	}
)

type (
	GetMySysMsgUnreadNumReq{
		MsgClasEm *int64 `json:"msgClasEm,optional"`
	}
	GetMySysMsgUnreadNumResp{
		Unread map[int64]int64 `json:"unread"`
	}
)
type (
	SetMySysMsgReadByClasReq{
		MsgClasEms []int64 `json:"msgClasEms,optional" check:"required"`
	}
)
type (
	SetMySysMsgReadByIdReq{
		MsgClasEm *int64 `json:"msgClasEm,optional" check:"required"`
		Ids []int64 `json:"ids,optional" check:"required"`
	}
)