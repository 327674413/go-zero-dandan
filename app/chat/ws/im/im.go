// Code generated by goctl. DO NOT EDIT.
// Source: im.proto

package im

import (
	"context"

	"go-zero-dandan/app/chat/ws/types/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	SendMsgReq = pb.SendMsgReq
	Success    = pb.Success

	Im interface {
		SendMsg(ctx context.Context, in *SendMsgReq, opts ...grpc.CallOption) (*Success, error)
	}

	defaultIm struct {
		cli zrpc.Client
	}
)

func NewIm(cli zrpc.Client) Im {
	return &defaultIm{
		cli: cli,
	}
}

func (m *defaultIm) SendMsg(ctx context.Context, in *SendMsgReq, opts ...grpc.CallOption) (*Success, error) {
	client := pb.NewImClient(m.cli.Conn())
	return client.SendMsg(ctx, in, opts...)
}
