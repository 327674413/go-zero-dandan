// Code generated by goctl. DO NOT EDIT.
// Source: goods.proto

package goods

import (
	"context"

	"go-zero-dandan/app/goods/rpc/types/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Goods interface {
		GetOne(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*GoodsInfo, error)
		GetPage(ctx context.Context, in *GetPageReq, opts ...grpc.CallOption) (*GetPageResp, error)
		GetPageWithTotal(ctx context.Context, in *GetPageReq, opts ...grpc.CallOption) (*GetPageWithTotalResp, error)
	}

	defaultGoods struct {
		cli zrpc.Client
	}
)

func NewGoods(cli zrpc.Client) Goods {
	return &defaultGoods{
		cli: cli,
	}
}

func (m *defaultGoods) GetOne(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*GoodsInfo, error) {
	client := pb.NewGoodsClient(m.cli.Conn())
	return client.GetOne(ctx, in, opts...)
}

func (m *defaultGoods) GetPage(ctx context.Context, in *GetPageReq, opts ...grpc.CallOption) (*GetPageResp, error) {
	client := pb.NewGoodsClient(m.cli.Conn())
	return client.GetPage(ctx, in, opts...)
}

func (m *defaultGoods) GetPageWithTotal(ctx context.Context, in *GetPageReq, opts ...grpc.CallOption) (*GetPageWithTotalResp, error) {
	client := pb.NewGoodsClient(m.cli.Conn())
	return client.GetPageWithTotal(ctx, in, opts...)
}
