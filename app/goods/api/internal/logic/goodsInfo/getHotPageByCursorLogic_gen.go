// Code generated by goctl. DO NOT EDIT.
package goodsInfo

import (
	"context"

	"go-zero-dandan/app/goods/api/internal/svc"
	"go-zero-dandan/app/goods/api/internal/types"

	"github.com/zeromicro/go-zero/core/logx"
	"go-zero-dandan/common/resd"
	"go-zero-dandan/common/typed"
)

type GetHotPageByCursorLogicGen struct {
	logx.Logger
	ctx          context.Context
	svc          *svc.ServiceContext
	resd         *resd.Resp
	meta         *typed.ReqMeta
	hasUserInfo  bool
	mustUserInfo bool
	req          struct {
		Cursor int64 `json:"cursor,optional"`
		Size   int64 `json:"size,optional"`
		Page   int64 `json:"page,optional"`
	}
	hasReq struct {
		Cursor bool
		Size   bool
		Page   bool
	}
}

func NewGetHotPageByCursorLogicGen(ctx context.Context, svc *svc.ServiceContext) *GetHotPageByCursorLogicGen {
	meta, _ := ctx.Value("reqMeta").(*typed.ReqMeta)
	if meta == nil {
		meta = &typed.ReqMeta{}
	}
	return &GetHotPageByCursorLogicGen{
		Logger: logx.WithContext(ctx),
		ctx:    ctx,
		svc:    svc,
		resd:   resd.NewResp(ctx, resd.I18n.NewLang(meta.Lang)),
		meta:   meta,
	}
}

func (l *GetHotPageByCursorLogicGen) initReq(req *types.GetHotPageByCursorReq) error {

	if req.Cursor != nil {
		l.req.Cursor = *req.Cursor
		l.hasReq.Cursor = true
	} else {
		l.hasReq.Cursor = false
	}

	if req.Size != nil {
		l.req.Size = *req.Size
		l.hasReq.Size = true
	} else {
		l.hasReq.Size = false
	}

	if req.Page != nil {
		l.req.Page = *req.Page
		l.hasReq.Page = true
	} else {
		l.hasReq.Page = false
	}
	l.hasUserInfo = true

	return nil
}
