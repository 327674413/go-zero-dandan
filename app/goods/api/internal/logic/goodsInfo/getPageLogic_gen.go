// Code generated by goctl. DO NOT EDIT.
package goodsInfo

import (
	"context"

	"go-zero-dandan/app/goods/api/internal/svc"
	"go-zero-dandan/app/goods/api/internal/types"

	"github.com/zeromicro/go-zero/core/logx"
	"go-zero-dandan/common/resd"
	"go-zero-dandan/common/typed"
	"strings"
)

type GetPageLogicGen struct {
	logx.Logger
	ctx          context.Context
	svc          *svc.ServiceContext
	resd         *resd.Resp
	meta         *typed.ReqMeta
	hasUserInfo  bool
	mustUserInfo bool
	req          struct {
		Page      int64  `json:"page,optional"`
		Size      int64  `json:"size,optional"`
		Sort      string `json:"sort,optional"`
		TotalFlag int64  `json:"totalFlag,optional"`
	}
	hasReq struct {
		Page      bool
		Size      bool
		Sort      bool
		TotalFlag bool
	}
}

func NewGetPageLogicGen(ctx context.Context, svc *svc.ServiceContext) *GetPageLogicGen {
	meta, _ := ctx.Value("reqMeta").(*typed.ReqMeta)
	if meta == nil {
		meta = &typed.ReqMeta{}
	}
	return &GetPageLogicGen{
		Logger: logx.WithContext(ctx),
		ctx:    ctx,
		svc:    svc,
		resd:   resd.NewResp(ctx, meta.Lang),
		meta:   meta,
	}
}

func (l *GetPageLogicGen) initReq(req *types.GetPageReq) error {

	if req.Page != nil {
		l.req.Page = *req.Page
		l.hasReq.Page = true
	} else {
		l.hasReq.Page = false
	}

	if req.Size != nil {
		l.req.Size = *req.Size
		l.hasReq.Size = true
	} else {
		l.hasReq.Size = false
	}

	if req.Sort != nil {
		l.req.Sort = strings.TrimSpace(*req.Sort)
		l.hasReq.Sort = true
	} else {
		l.hasReq.Sort = false
	}

	if req.TotalFlag != nil {
		l.req.TotalFlag = *req.TotalFlag
		l.hasReq.TotalFlag = true
	} else {
		l.hasReq.TotalFlag = false
	}
	l.hasUserInfo = true

	return nil
}
